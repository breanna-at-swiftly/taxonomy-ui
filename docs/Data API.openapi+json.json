{
    "openapi": "3.0.1",
    "info": {
        "title": "Data API",
        "description": "APIs for interacting with the data platform.",
        "version": "v1.0"
    },
    "servers": [
        {
            "url": "https://swiftly-data-api-prod.azure-api.net/v1.0"
        }
    ],
    "paths": {
        "/refresh-request/create": {
            "post": {
                "tags": [
                    "Refresh Request"
                ],
                "summary": "refresh-request-create",
                "description": "Create EventHub refresh requests for stores, products, segments, and other domains.",
                "operationId": "refresh-request-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshRequest"
                            },
                            "examples": {
                                "Stores Refresh Example": {
                                    "summary": "Stores refresh request",
                                    "value": {
                                        "tenant_id": "henh",
                                        "domain": "stores"
                                    }
                                },
                                "Segment Refresh Example": {
                                    "summary": "Segment refresh request",
                                    "value": {
                                        "tenant_id": "fd",
                                        "domain": "segments",
                                        "domain_item_id": "3e4c589f-8372-4de4-8c58-576147a444b6"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshResponse"
                                },
                                "examples": {
                                    "Refresh Success Example": {
                                        "summary": "Successfull refresh request",
                                        "value": {
                                            "refresh_request_id": "530fdde7-f510-4005-99a1-7437273adda7",
                                            "message": "Refresh requested."
                                        }
                                    },
                                    "Duplicate Refresh Example": {
                                        "summary": "Duplicate refresh request",
                                        "value": {
                                            "refresh_request_id": "null",
                                            "message": "Refresh request already in progress for tenant_id: henh and domain: stores.  Try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/refresh-request/status": {
            "get": {
                "tags": [
                    "Refresh Request"
                ],
                "summary": "refresh-request-status",
                "description": "Checks status for a refresh request.",
                "operationId": "refresh-request-status",
                "parameters": [
                    {
                        "name": "refresh_request_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshStatusCompleted"
                                },
                                "examples": {
                                    "Refresh InProgess Example": {
                                        "summary": "Refresh in progress",
                                        "value": {
                                            "refresh_request_id": "530fdde7-f510-4005-99a1-7437273adda7",
                                            "status": "In progress"
                                        }
                                    },
                                    "Refresh Completed Example": {
                                        "summary": "Refresh Completed",
                                        "value": {
                                            "refresh_request_id": "530fdde7-f510-4005-99a1-7437273adda7",
                                            "status": "Completed",
                                            "record_count": 9,
                                            "fullfilled_datetime_utc": "2023-03-17T05:19:45.0000000+00:00"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/store/list": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "store-list",
                "description": "List store by tenant id. Returns up to 25 stores per call. Use 'start' parameter to paginate through store list. Defaults to 0 if not provided.",
                "operationId": "store-list",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.collection+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreListResponse"
                                },
                                "examples": {
                                    "Store List Response": {
                                        "summary": "Response for store list",
                                        "value": [
                                            {
                                                "store_id": "a75d9543-ff40-41f8-acfb-368ae4349cb3",
                                                "chain_id": "375bd5a2-da82-4e6a-a330-c264c797272f",
                                                "tenant_id": "henh",
                                                "tenant_store_id": "35",
                                                "name": "Fairway Hen House Market",
                                                "description": "Fairway Hen House Market"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/store/get": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "store-get",
                "description": "Returns store details for a requested store_id. The store response has additional properties that are not allowed in the /store/update-full and /store/update-incremental requests.",
                "operationId": "store-get",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreGetResponse"
                                },
                                "example": {
                                    "store_id": "string",
                                    "tenant_id": "string",
                                    "update_datetime_utc": 0,
                                    "process_status": "string",
                                    "ledger_id": "string",
                                    "context_id": "string",
                                    "store_info": {
                                        "chain_id": "string",
                                        "tenant_store_id": "string",
                                        "tenant_chain_id": "string",
                                        "insert_datetime_utc": 0,
                                        "update_datetime_utc": 0,
                                        "name": "string",
                                        "description": "string",
                                        "latitude": 0,
                                        "longitude": 0,
                                        "address1": "string",
                                        "address2": "string",
                                        "city": "string",
                                        "state": "string",
                                        "country": "string",
                                        "postal_code": "string",
                                        "status": {
                                            "status": "string",
                                            "as_of_date": "string"
                                        },
                                        "next_status": {
                                            "status": "string",
                                            "as_of_date": "string"
                                        },
                                        "phone_numbers": [
                                            {
                                                "value": "string",
                                                "description": "string"
                                            }
                                        ],
                                        "hours": [
                                            {
                                                "day": "string",
                                                "hours": {
                                                    "open": "string",
                                                    "close": "string"
                                                }
                                            }
                                        ],
                                        "payments": [
                                            "string"
                                        ],
                                        "languages": [
                                            "string"
                                        ],
                                        "amenities": [
                                            "string"
                                        ],
                                        "images": [
                                            {
                                                "url": "string",
                                                "purpose": "string"
                                            }
                                        ],
                                        "websites": [
                                            {
                                                "value": "string",
                                                "description": "string"
                                            }
                                        ],
                                        "department_details": [
                                            {
                                                "name": "string",
                                                "description": "string",
                                                "status": {
                                                    "status": "string",
                                                    "as_of_date": "string"
                                                },
                                                "next_status": {
                                                    "status": "string",
                                                    "as_of_date": "string"
                                                },
                                                "hours": [
                                                    {
                                                        "day": "string",
                                                        "hours": {
                                                            "open": "string",
                                                            "close": "string"
                                                        }
                                                    }
                                                ],
                                                "phone_numbers": [
                                                    {
                                                        "value": "string",
                                                        "description": "string"
                                                    }
                                                ],
                                                "images": [
                                                    {
                                                        "url": "string",
                                                        "purpose": "string"
                                                    }
                                                ],
                                                "websites": [
                                                    {
                                                        "value": "string",
                                                        "description": "string"
                                                    }
                                                ]
                                            }
                                        ],
                                        "metadata": [
                                            {
                                                "id": "string",
                                                "value": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/store/update-full": {
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "update-full",
                "description": "Bulk update of the full store listing for a tenant.  Existing stores that are not included in the request payload will be flagged deleted in the data warehouse.",
                "operationId": "store-update-full",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateRequest"
                            },
                            "example": {
                                "tenant_id": "string",
                                "stores": [
                                    {
                                        "tenant_store_id": "string",
                                        "tenant_chain_id": "string",
                                        "name": "string",
                                        "description": "string",
                                        "address1": "string",
                                        "address2": "string",
                                        "city": "string",
                                        "state": "string",
                                        "country": "string",
                                        "postal_code": "string",
                                        "status": {
                                            "status": "string",
                                            "as_of_date": "string"
                                        },
                                        "next_status": {
                                            "status": "string",
                                            "as_of_date": "string"
                                        },
                                        "phone_numbers": [
                                            {
                                                "value": "string",
                                                "description": "string"
                                            }
                                        ],
                                        "hours": [
                                            {
                                                "day": "string",
                                                "hours": {
                                                    "open": "string",
                                                    "close": "string"
                                                }
                                            }
                                        ],
                                        "payments": [
                                            "string"
                                        ],
                                        "languages": [
                                            "string"
                                        ],
                                        "amenities": [
                                            "string"
                                        ],
                                        "images": [
                                            {
                                                "url": "string",
                                                "purpose": "string"
                                            }
                                        ],
                                        "websites": [
                                            {
                                                "value": "string",
                                                "description": "string"
                                            }
                                        ],
                                        "time_zone": "string",
                                        "latitude": 0,
                                        "longitude": 0,
                                        "department_details": [
                                            {
                                                "name": "string",
                                                "description": "string",
                                                "status": {
                                                    "status": "string",
                                                    "as_of_date": "string"
                                                },
                                                "next_status": {
                                                    "status": "string",
                                                    "as_of_date": "string"
                                                },
                                                "hours": [
                                                    {
                                                        "day": "string",
                                                        "hours": {
                                                            "open": "string",
                                                            "close": "string"
                                                        }
                                                    }
                                                ],
                                                "phone_numbers": [
                                                    {
                                                        "value": "string",
                                                        "description": "string"
                                                    }
                                                ],
                                                "images": [
                                                    {
                                                        "url": "string",
                                                        "purpose": "string"
                                                    }
                                                ],
                                                "websites": [
                                                    {
                                                        "value": "string",
                                                        "description": "string"
                                                    }
                                                ]
                                            }
                                        ],
                                        "metadata": [
                                            {}
                                        ],
                                        "doc_version": 0
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/store/update-incremental": {
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "update-incremental",
                "description": "Updates one or more stores for a tenant.  All the properties must be in the payload, not just the property being updated.",
                "operationId": "store-update-incremental",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateRequest"
                            },
                            "example": {
                                "tenant_id": "string",
                                "stores": [
                                    {
                                        "tenant_store_id": "string",
                                        "tenant_chain_id": "string",
                                        "name": "string",
                                        "description": "string",
                                        "address1": "string",
                                        "address2": "string",
                                        "city": "string",
                                        "state": "string",
                                        "country": "string",
                                        "postal_code": "string",
                                        "status": {
                                            "status": "string",
                                            "as_of_date": "string"
                                        },
                                        "next_status": {
                                            "status": "string",
                                            "as_of_date": "string"
                                        },
                                        "phone_numbers": [
                                            {
                                                "value": "string",
                                                "description": "string"
                                            }
                                        ],
                                        "hours": [
                                            {
                                                "day": "string",
                                                "hours": {
                                                    "open": "string",
                                                    "close": "string"
                                                }
                                            }
                                        ],
                                        "payments": [
                                            "string"
                                        ],
                                        "languages": [
                                            "string"
                                        ],
                                        "amenities": [
                                            "string"
                                        ],
                                        "images": [
                                            {
                                                "url": "string",
                                                "purpose": "string"
                                            }
                                        ],
                                        "websites": [
                                            {
                                                "value": "string",
                                                "description": "string"
                                            }
                                        ],
                                        "time_zone": "string",
                                        "latitude": 0,
                                        "longitude": 0,
                                        "department_details": [
                                            {
                                                "name": "string",
                                                "description": "string",
                                                "status": {
                                                    "status": "string",
                                                    "as_of_date": "string"
                                                },
                                                "next_status": {
                                                    "status": "string",
                                                    "as_of_date": "string"
                                                },
                                                "hours": [
                                                    {
                                                        "day": "string",
                                                        "hours": {
                                                            "open": "string",
                                                            "close": "string"
                                                        }
                                                    }
                                                ],
                                                "phone_numbers": [
                                                    {
                                                        "value": "string",
                                                        "description": "string"
                                                    }
                                                ],
                                                "images": [
                                                    {
                                                        "url": "string",
                                                        "purpose": "string"
                                                    }
                                                ],
                                                "websites": [
                                                    {
                                                        "value": "string",
                                                        "description": "string"
                                                    }
                                                ]
                                            }
                                        ],
                                        "metadata": [
                                            {}
                                        ],
                                        "doc_version": 0
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/domain/list": {
            "get": {
                "tags": [
                    "Reference Data"
                ],
                "summary": "domain-list",
                "description": "Returns list of available data domains",
                "operationId": "domain-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/store/metadata-search": {
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "metadata-search",
                "description": "List stores that matches tenant_id and metadata id and value in request body",
                "operationId": "store-metadata-search",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreMetadataSearch"
                            },
                            "examples": {
                                "Store Metadata Search": {
                                    "summary": "Search for store using metadata id and value",
                                    "value": {
                                        "tenant_id": "henh",
                                        "id": "agr_flyer_store_id",
                                        "value": "644"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreMetadataSearchResponse"
                                },
                                "examples": {
                                    "Store Metadata Search Response": {
                                        "summary": "Response for store metadata search",
                                        "value": [
                                            {
                                                "store_id": "a75d9543-ff40-41f8-acfb-368ae4349cb3",
                                                "chain_id": "375bd5a2-da82-4e6a-a330-c264c797272f",
                                                "tenant_id": "henh",
                                                "tenant_store_id": "35",
                                                "name": "Fairway Hen House Market",
                                                "description": "Fairway Hen House Market"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/store/status": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "store-status",
                "description": "Returns store update status for a requested context id",
                "operationId": "store-status",
                "parameters": [
                    {
                        "name": "context_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/store/status-list": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "store-status-list",
                "description": "Returns list of store update status for a requested tenant",
                "operationId": "store-status-list",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.collection+json": {}
                        }
                    }
                }
            }
        },
        "/tenant/list": {
            "get": {
                "tags": [
                    "Reference Data"
                ],
                "summary": "tenant-list",
                "description": "Returns list of tenants",
                "operationId": "tenant-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantListResponse"
                                },
                                "example": [
                                    {
                                        "tenant_id": "string",
                                        "display_name": "string",
                                        "parent_id": "string",
                                        "chain_id": "string",
                                        "dev_only": true
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/campaign/get": {
            "get": {
                "tags": [
                    "Campaigns"
                ],
                "summary": "campaign-get",
                "description": "Returns campaign details and upcs for a requested campaign_code. Returns all open campaigns with no upc mappings if campaign_code is not used.",
                "operationId": "campaign-get",
                "parameters": [
                    {
                        "name": "campaign_code",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignGetResponse"
                                },
                                "example": [
                                    {
                                        "campaign_code": "string",
                                        "campaign_name": "string",
                                        "campaign_start_date": "string",
                                        "campaign_end_date": "string",
                                        "campaign_status": "string",
                                        "advertiser_name": "string",
                                        "retailer_name": "string",
                                        "mapped_upc_count": 0,
                                        "upc_list": [
                                            {
                                                "upc": "string",
                                                "featured": true
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/campaign/update": {
            "post": {
                "tags": [
                    "Campaigns"
                ],
                "summary": "campaign-update",
                "description": "Update UPC list for a Campaign.",
                "operationId": "campaign-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignUpdateRequest"
                            },
                            "example": {
                                "campaign_code": "string",
                                "upc_list": [
                                    {
                                        "upc": "string",
                                        "featured": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/product/upsert": {
            "post": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-upsert",
                "description": "Creates or updates a product for the Product Catalog.",
                "operationId": "product-upsert",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductUpsertRequest"
                            },
                            "example": {
                                "product_code": "string",
                                "product_code_type": "string",
                                "product_name": "string",
                                "product_image": "string",
                                "is_active": true,
                                "description": "string",
                                "brand": "string",
                                "supplemental_images": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductUpsertResponse"
                                },
                                "example": {
                                    "product_code": "string",
                                    "action": "string",
                                    "error": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/product/get": {
            "get": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-get",
                "description": "Returns a product from the Product Catalog by product code.",
                "operationId": "product-get",
                "parameters": [
                    {
                        "name": "product_code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductGetResponse"
                                },
                                "example": {
                                    "product_code": "string",
                                    "product_code_type": "string",
                                    "product_name": "string",
                                    "product_image": "string",
                                    "is_active": true,
                                    "description": "string",
                                    "brand": "string",
                                    "supplemental_images": [
                                        "string"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/product/list": {
            "get": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-list",
                "description": "Returns a list of products from the Product Catalog that match the search parameters.",
                "operationId": "product-list",
                "parameters": [
                    {
                        "name": "product_code",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "product_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductListGetResponse"
                                },
                                "example": {
                                    "results": [
                                        {
                                            "product_code": "string",
                                            "product_code_type": "string",
                                            "product_name": "string",
                                            "product_image": "string",
                                            "is_active": true,
                                            "description": "string",
                                            "brand": "string",
                                            "supplemental_images": [
                                                "string"
                                            ]
                                        }
                                    ],
                                    "total": 0,
                                    "next_offset": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/profiles/deleted-profiles/get": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "profiles-deleted-profiles-get",
                "description": "Returns deleted profiles for a requested tenant_id and period (start_date, end_date). Should be specified start_date or/and end_date. In case if only one parameter is specified data will be returned 6 months before or after, depending on specified parameter. Ex. start_date = '2022-01-01', end_date will be '2022-07-01'",
                "operationId": "profiles-deleted-profiles-get",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeletedProfilesResponse"
                                },
                                "example": {
                                    "swiftly_user_id": "string",
                                    "tenant_id": "string",
                                    "loyalty_id": "string",
                                    "updated_datetime": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/profiles/tenant-users/list": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "profiles-tenant-users-list",
                "description": "Returns profiles for a requested tenant_id and period (start_date, end_date). Should be specified start_date and end_date.",
                "operationId": "profiles-tenant-users-list",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantUsersResponse"
                                },
                                "example": {
                                    "tenant_id": "string",
                                    "customer_id": "string",
                                    "email": "string",
                                    "phone": "string",
                                    "download_date": "string",
                                    "point_balance": "string",
                                    "points_expiring": "string",
                                    "rewards_expiring": "string",
                                    "preferred_store_location": "string",
                                    "email_opt_in": "string",
                                    "push_opt_in": "string",
                                    "eaiv_over_21": "string",
                                    "eaiv_date": "string",
                                    "zip": "string",
                                    "dob": "string",
                                    "street": "string",
                                    "city": "string",
                                    "state": "string",
                                    "last_app_activity_datetime": "string",
                                    "updated_datetime": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/swiftly-catalog/product/update": {
            "post": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "swiftly-catalog-product-update",
                "description": "Updates a product for the Swiftly Product Catalog.",
                "operationId": "swiftly-catalog-product-upsert",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwiftlyCatalogProductUpdateRequest"
                            },
                            "example": {
                                "product_code": "string",
                                "is_active": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwiftlyCatalogProductUpdateResponse"
                                },
                                "example": {
                                    "product_code": "string",
                                    "action": "string",
                                    "error": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/swiftly-catalog/product/get": {
            "get": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "swiftly-catalog-product-get",
                "description": "Returns a product from the Swiftly Catalog by product code.",
                "operationId": "swiftly-catalog-product-get",
                "parameters": [
                    {
                        "name": "product_code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwiftlyCatalogProductGetResponse"
                                },
                                "example": {
                                    "product_code": "string",
                                    "product_code_type": "string",
                                    "is_active": true,
                                    "attributes": [
                                        {
                                            "attribute_name": "string",
                                            "attribute_value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/swiftly-catalog/product/list": {
            "get": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "swiftly-catalog-product-list",
                "description": "Returns a list of products from the Swiftly Catalog that match the search parameters.",
                "operationId": "swiftly-catalog-product-list",
                "parameters": [
                    {
                        "name": "product_code",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "product_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "start_datetime_utc",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwiftlyCatalogProductListGetResponse"
                                },
                                "example": {
                                    "results": [
                                        {
                                            "product_code": "string",
                                            "product_code_type": "string",
                                            "is_active": true,
                                            "attributes": [
                                                {
                                                    "attribute_name": "string",
                                                    "attribute_value": "string"
                                                }
                                            ]
                                        }
                                    ],
                                    "total": 0,
                                    "next_offset": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/product-flag-def/list": {
            "get": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-flag-list",
                "description": "Returns all the product flags.",
                "operationId": "product-flag-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductFlagListResponse"
                                },
                                "example": [
                                    {
                                        "product_flag_id": "string",
                                        "product_flag_name": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/product-flag/get": {
            "get": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-flag-get",
                "description": "Returns all the product flags filtered by tenant_id.",
                "operationId": "product-flag-get",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductFlagGetResponse"
                                },
                                "example": [
                                    {
                                        "tenant_id": "string",
                                        "retailer_flag_code": "string",
                                        "display_name": "string",
                                        "flag_name": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/product-flag/create": {
            "post": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-flag-create",
                "description": "Creates the product flag.",
                "operationId": "product-flag-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductFlagCreateRequest"
                            },
                            "example": {
                                "tenant_id": "string",
                                "retailer_flag_code": "string",
                                "display_name": "string",
                                "flag_name": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductFlagUpdateResponse"
                                },
                                "example": {
                                    "message": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/product-flag/update": {
            "post": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-flag-update",
                "description": "Updates the product flag.",
                "operationId": "product-flag-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductFlagUpdateRequest"
                            },
                            "example": {
                                "tenant_id": "string",
                                "retailer_flag_code": "string",
                                "display_name": "string",
                                "flag_name": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductFlagUpdateResponse"
                                },
                                "example": {
                                    "message": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/product-flag/delete": {
            "delete": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-flag-delete",
                "description": "Marked product flag as deleted by tenant_id and retailer_flag_code",
                "operationId": "product-flag-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductFlagDeleteRequest"
                            },
                            "example": {
                                "tenant_id": "string",
                                "retailer_flag_code": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductFlagDeleteResponse"
                                },
                                "example": {
                                    "tenant_id": "string",
                                    "retailer_flag_code": "string",
                                    "success": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/product-attribute-priority/list": {
            "get": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-attribute-priority-list",
                "description": "Returns all the product attribute priorities by tenant_id.",
                "operationId": "product-attribute-priority-list",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductAttributePriorityListResponse"
                                },
                                "example": [
                                    {
                                        "tenant_id": "string",
                                        "attribute_id": 0,
                                        "attribute_name": "string",
                                        "display_name": "string",
                                        "source_id": 0,
                                        "source_name": "string",
                                        "source_code": "string",
                                        "priority": 0
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/retailer/product-attribute-priority/create": {
            "post": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-attribute-priority-create",
                "description": "Creates the product attribute priority.",
                "operationId": "product-attribute-priority-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductAttributePriorityCreateRequest"
                            },
                            "example": {
                                "tenant_id": "string",
                                "attribute_id": 0,
                                "priority": [
                                    {
                                        "source_id": 0,
                                        "priority": 0
                                    }
                                ],
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductAttributePriorityCreateResponse"
                                },
                                "example": {
                                    "message": [
                                        0
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/product-attribute-priority/update": {
            "post": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-attribute-priority-update",
                "description": "Updates the product attribute priority.",
                "operationId": "product-attribute-priority-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductAttributePriorityCreateRequest"
                            },
                            "example": {
                                "tenant_id": "string",
                                "attribute_id": 0,
                                "priority": [
                                    {
                                        "source_id": 0,
                                        "priority": 0
                                    }
                                ],
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductAttributePriorityCreateResponse"
                                },
                                "example": {
                                    "message": [
                                        0
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/product-attribute/list": {
            "get": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-attribute-list",
                "description": "Returns all the attributes.",
                "operationId": "product-attribute-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductAttributeListResponse"
                                },
                                "example": [
                                    {
                                        "attribute_id": 0,
                                        "attribute_name": "string",
                                        "display_name": "string",
                                        "description": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/retailer/product-source/list": {
            "get": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-source-list",
                "description": "Returns all the sources by tenant_id.",
                "operationId": "product-source-list",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductSourceListResponse"
                                },
                                "example": [
                                    {
                                        "source_id": 0,
                                        "source_name": "string",
                                        "source_code": "string",
                                        "description": "string",
                                        "tenant_id": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/image/get": {
            "get": {
                "tags": [
                    "Image"
                ],
                "summary": "image-get",
                "description": "Returns image details",
                "operationId": "image-get",
                "parameters": [
                    {
                        "name": "image_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageGetResponse"
                                },
                                "example": {
                                    "image_id": 0,
                                    "original_image_url": "string",
                                    "image_url": "string",
                                    "image_type": "string",
                                    "external_reference": [
                                        {}
                                    ],
                                    "last_updated": "string",
                                    "status": "string",
                                    "last_refresh_date": "string",
                                    "comments": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/image/list": {
            "get": {
                "tags": [
                    "Image"
                ],
                "summary": "image-list",
                "description": "Returns list of images",
                "operationId": "image-list",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "image_type",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageListResponse"
                                },
                                "example": {
                                    "results": [
                                        {
                                            "image_id": 0,
                                            "original_image_url": "string",
                                            "image_url": "string",
                                            "image_type": "string",
                                            "external_reference": [
                                                {}
                                            ],
                                            "last_updated": "string",
                                            "status": "string",
                                            "last_refresh_date": "string",
                                            "comments": "string"
                                        }
                                    ],
                                    "total": 0,
                                    "next_offset": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/image/submit": {
            "post": {
                "tags": [
                    "Image"
                ],
                "summary": "image-submit",
                "description": "submits list of images for downloading to image storage account",
                "operationId": "image-submit",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImageSubmitRequest"
                            },
                            "example": {
                                "images": [
                                    {
                                        "image_type": "string",
                                        "image_url": "string",
                                        "external_reference": [
                                            {
                                                "tenant_id": "string",
                                                "product_code": "string"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageGetResponse"
                                },
                                "example": {
                                    "image_id": 0,
                                    "original_image_url": "string",
                                    "image_url": "string",
                                    "image_type": "string",
                                    "external_reference": [
                                        {}
                                    ],
                                    "last_updated": "string",
                                    "status": "string",
                                    "last_refresh_date": "string",
                                    "comments": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/image/upload": {
            "post": {
                "tags": [
                    "Image"
                ],
                "summary": "image-upload",
                "description": "uploads an image to image storage account",
                "operationId": "image-upload",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImageUploadRequest"
                            },
                            "example": {
                                "file_name": "string",
                                "image_data": "string",
                                "image_type": "string",
                                "preserve_filename": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageGetResponse"
                                },
                                "example": {
                                    "image_id": 0,
                                    "original_image_url": "string",
                                    "image_url": "string",
                                    "image_type": "string",
                                    "external_reference": [
                                        {}
                                    ],
                                    "last_updated": "string",
                                    "status": "string",
                                    "last_refresh_date": "string",
                                    "comments": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/upc/clean/get": {
            "get": {
                "tags": [
                    "UPC"
                ],
                "summary": "upc-clean-get",
                "description": "Accepts a GTIN14 and returns different formatted UPCs.",
                "operationId": "upc-clean-get",
                "parameters": [
                    {
                        "name": "upc",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpcCleanGetResponse"
                                },
                                "example": {
                                    "upc": "string",
                                    "codes": {
                                        "UPC12": "string",
                                        "UPC11": "string",
                                        "GTIN14": "string",
                                        "EAN8": "string",
                                        "EAN13": "string",
                                        "UPCE": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/upc/clean/list": {
            "post": {
                "tags": [
                    "UPC"
                ],
                "summary": "upc-clean-list",
                "description": "Accepts a list of GTIN14s and returns different formatted UPCs",
                "operationId": "upc-clean-list",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpcCleanListRequest"
                            },
                            "example": [
                                "string"
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpcCleanListResponse"
                                },
                                "example": [
                                    {
                                        "upc": "string",
                                        "codes": {
                                            "UPC12": "string",
                                            "UPC11": "string",
                                            "GTIN14": "string",
                                            "EAN8": "string",
                                            "EAN13": "string",
                                            "UPCE": "string"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/banner/config/list": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "banner-config-list",
                "description": "Returns a list of banner configuration options",
                "operationId": "banner-config-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BannerConfigListResponse"
                                },
                                "example": [
                                    {
                                        "configuration_id": 0,
                                        "configuration_name": "string",
                                        "description": "string",
                                        "configuration_data_type_name": "string",
                                        "category": "string",
                                        "template": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/banner/get": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "banner-get",
                "description": "Returns information about the requested banner",
                "operationId": "banner-get",
                "parameters": [
                    {
                        "name": "banner_short_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "banner_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BannerGetResponse"
                                },
                                "example": {
                                    "banner_id": "string",
                                    "banner_short_name": "string",
                                    "display_name": "string",
                                    "is_active": true,
                                    "configurations": {},
                                    "last_updated": "string",
                                    "last_updated_ny": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/banner/list": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "banner-list",
                "description": "Returns information about list of banners",
                "operationId": "banner-list",
                "parameters": [
                    {
                        "name": "banner_short_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "display_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BannerListResponse"
                                },
                                "example": {
                                    "results": [
                                        {
                                            "banner_id": "string",
                                            "banner_short_name": "string",
                                            "display_name": "string",
                                            "is_active": true,
                                            "configurations": {},
                                            "last_updated": "string",
                                            "last_updated_ny": "string"
                                        }
                                    ],
                                    "total": 0,
                                    "next_offset": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/banner/save": {
            "post": {
                "tags": [
                    "Configuration"
                ],
                "summary": "banner-post",
                "description": "Updates or inserts banner with configs and returns banner data after modification",
                "operationId": "banner-save",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BannerSaveRequest"
                            },
                            "example": {
                                "banner_short_name": "string",
                                "display_name": "string",
                                "is_active": true,
                                "republish": true,
                                "configurations": {},
                                "banner_id": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BannerGetResponse"
                                },
                                "example": {
                                    "banner_id": "string",
                                    "banner_short_name": "string",
                                    "display_name": "string",
                                    "is_active": true,
                                    "configurations": {},
                                    "last_updated": "string",
                                    "last_updated_ny": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/swiftly-catalog/rebuild": {
            "post": {
                "tags": [
                    "Configuration"
                ],
                "summary": "swiftly-catalog/rebuild",
                "description": "Initiates full rebuild of product catalog",
                "operationId": "swiftly-catalog-product-rebuild",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/data-export/get": {
            "get": {
                "tags": [
                    "Data Export"
                ],
                "summary": "data-export-get",
                "description": "Returns export config information by export_config_id",
                "operationId": "data-export-get",
                "parameters": [
                    {
                        "name": "export_config_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataExportSaveResponse"
                                },
                                "example": {
                                    "export_config_id": "string",
                                    "export_config_name": "string",
                                    "export_type_id": 0,
                                    "tenant_id": "string",
                                    "parameters": {},
                                    "is_active": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data-export/list": {
            "get": {
                "tags": [
                    "Data Export"
                ],
                "summary": "data-export-list",
                "description": "Returns export configs information by tenant_id",
                "operationId": "data-export-list",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataExportSaveResponse"
                                },
                                "example": {
                                    "export_config_id": "string",
                                    "export_config_name": "string",
                                    "export_type_id": 0,
                                    "tenant_id": "string",
                                    "parameters": {},
                                    "is_active": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data-export/save": {
            "post": {
                "tags": [
                    "Data Export"
                ],
                "summary": "data-export-post",
                "description": "Updates or inserts data export config, creates mover config",
                "operationId": "data-export-save",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DataExportSaveRequest"
                            },
                            "example": {
                                "export_config_name": "string",
                                "export_type_id": 0,
                                "tenant_id": 0,
                                "parameters": {},
                                "is_active": true,
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataExportSaveResponse"
                                },
                                "example": {
                                    "export_config_id": "string",
                                    "export_config_name": "string",
                                    "export_type_id": 0,
                                    "tenant_id": "string",
                                    "parameters": {},
                                    "is_active": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data-export-types/list": {
            "get": {
                "tags": [
                    "Data Export"
                ],
                "summary": "data-export-types-list",
                "description": "Returns a list of data export types",
                "operationId": "data-export-types-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataExportTypesListResponse"
                                },
                                "example": {
                                    "export_type_id": "string",
                                    "export_type_name": "string",
                                    "export_type_display_name": "string",
                                    "export_parameters": {},
                                    "is_active": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/product-attribute-override/list": {
            "get": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-attribute-override-list",
                "description": "Returns all the product attribute overrides by tenant_id.",
                "operationId": "product-attribute-override-list",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductAttributeOverrideListResponse"
                                },
                                "example": [
                                    {
                                        "tenant_id": "string",
                                        "product_code": "string",
                                        "attribute_id": 0,
                                        "attribute_name": "string",
                                        "display_name": "string",
                                        "source_code": "string",
                                        "source_name": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/retailer/product/list": {
            "get": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "retailer-product-list",
                "description": "Returns all the product codes and product names by tenant_id.",
                "operationId": "retailer-product-list",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_by",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetailerProductListResponse"
                                },
                                "example": [
                                    {
                                        "product_code": "string",
                                        "product_name": "string",
                                        "description": "string",
                                        "brand": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/retailer/product-attribute-override/save": {
            "post": {
                "tags": [
                    "Product Catalog"
                ],
                "summary": "product-attribute-override-save",
                "description": "Updates the product attribute override.",
                "operationId": "product-attribute-override-save",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductAttributeOverrideCreateRequest"
                            },
                            "example": {
                                "tenant_id": "string",
                                "product_code": "string",
                                "attribute_id": 0,
                                "source_code": "string",
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductAttributeOverrideCreateResponse"
                                },
                                "example": {
                                    "message": [
                                        0
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tlogs/submit": {
            "post": {
                "tags": [
                    "TLogs"
                ],
                "summary": "sprys-submit",
                "description": "Endpoint to submit test tlog data for sprys",
                "operationId": "tlogs-submit",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TLogsSubmit"
                            },
                            "example": {
                                "tenant_id": "string",
                                "trans_id": "string",
                                "trans_type": "string",
                                "trans_datetime": "string",
                                "store_id": "string",
                                "register_number": "string",
                                "trans_number": "string",
                                "retailer_loyalty_id": "string",
                                "items": [
                                    {
                                        "item_code": "string",
                                        "product_code": "string",
                                        "product_code_type": "string",
                                        "trans_line_number": 0,
                                        "unit_price": 0,
                                        "quantity": 0,
                                        "extended_price": 0,
                                        "currency": "USD",
                                        "unit_of_measure": "string"
                                    }
                                ],
                                "redemptions": [
                                    {
                                        "promotion_id": "string",
                                        "item_code": "string",
                                        "product_code": "string",
                                        "offer_discount": 0,
                                        "offer_face_value": 0
                                    }
                                ],
                                "tender_cards": [
                                    {
                                        "card_hash": "string",
                                        "card_masked": "string",
                                        "auth_code": "string",
                                        "card_issuer": "string",
                                        "card_expiration": "string",
                                        "is_ebt": true,
                                        "tender_amount": 0,
                                        "currency": "USD"
                                    }
                                ],
                                "retailer_customer_id": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/image/refresh": {
            "post": {
                "tags": [
                    "Image"
                ],
                "summary": "image-refresh",
                "description": "submits list of images for re-downloading to image storage account",
                "operationId": "image-refresh",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImageSubmitRequest"
                            },
                            "example": {
                                "images": [
                                    {
                                        "image_type": "string",
                                        "image_url": "string",
                                        "external_reference": [
                                            {
                                                "tenant_id": "string",
                                                "product_code": "string"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageGetResponse"
                                },
                                "example": {
                                    "image_id": 0,
                                    "original_image_url": "string",
                                    "image_url": "string",
                                    "image_type": "string",
                                    "external_reference": [
                                        {}
                                    ],
                                    "last_updated": "string",
                                    "status": "string",
                                    "last_refresh_date": "string",
                                    "comments": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/banner/config/update": {
            "patch": {
                "tags": [
                    "Configuration"
                ],
                "summary": "banner-config-update",
                "description": "Updates a configuration for a banner",
                "operationId": "banner-config-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BannerConfigUpdateRequest"
                            },
                            "example": {
                                "banner_short_name": "string",
                                "configuration_name": "string",
                                "configuration_value": "string",
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/taxonomy/graph/list": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-graph-list",
                "description": "Returns a list of taxonomy graphs",
                "operationId": "taxonomy-graph-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyGraphList"
                                },
                                "example": [
                                    {
                                        "graph_id": 0,
                                        "topology_id": 0,
                                        "name": "string",
                                        "notes": "string",
                                        "root_node_id": "string",
                                        "inserted_datetime": "string",
                                        "updated_datetime": "string",
                                        "updated_by": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/graph/get": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-graph-get",
                "description": "Returns a taxonomy graph",
                "operationId": "taxonomy-graph-get",
                "parameters": [
                    {
                        "name": "graph_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyGraphGet"
                                },
                                "example": {
                                    "graph_id": 0,
                                    "topology_id": 0,
                                    "name": "string",
                                    "notes": "string",
                                    "root_node_id": "string",
                                    "inserted_datetime": "string",
                                    "updated_datetime": "string",
                                    "updated_by": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/graph/create": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-graph-create",
                "description": "Creates a taxonomy graph",
                "operationId": "taxonomy-graph-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyGraphCreate"
                            },
                            "example": {
                                "topology_id": 0,
                                "name": "string",
                                "notes": "string",
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyGraphGet"
                                },
                                "example": {
                                    "graph_id": 0,
                                    "topology_id": 0,
                                    "name": "string",
                                    "notes": "string",
                                    "root_node_id": "string",
                                    "inserted_datetime": "string",
                                    "updated_datetime": "string",
                                    "updated_by": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/graph/update": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-graph-update",
                "description": "Updates a taxonomy graph",
                "operationId": "taxonomy-graph-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyGraphUpdate"
                            },
                            "example": {
                                "graph_id": 0,
                                "name": "string",
                                "notes": "string",
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyGraphGet"
                                },
                                "example": {
                                    "graph_id": 0,
                                    "topology_id": 0,
                                    "name": "string",
                                    "notes": "string",
                                    "root_node_id": "string",
                                    "inserted_datetime": "string",
                                    "updated_datetime": "string",
                                    "updated_by": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/graph/delete": {
            "delete": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-graph-delete",
                "description": "Deletes a taxonomy graph",
                "operationId": "taxonomy-graph-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyGraphDelete"
                            },
                            "example": {
                                "graph_id": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/taxonomy/graph/import": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-graph-import",
                "description": "Import taxonomy graphs",
                "operationId": "taxonomy-graph-import",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyGraphImport"
                            },
                            "example": {
                                "updated_by": "string",
                                "default_link_type_id": 0,
                                "graph": {},
                                "nodes": [
                                    {
                                        "name": "string",
                                        "source_id": "string",
                                        "notes": "string"
                                    }
                                ],
                                "links": [
                                    {
                                        "from_source_id": "string",
                                        "to_source_id": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/taxonomy/graph/query": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-graph-query",
                "description": "Query taxonomy graphs",
                "operationId": "taxonomy-graph-query",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyGraphQuery"
                            },
                            "example": {
                                "graph_id": 0,
                                "seed": {},
                                "dir": "string",
                                "link_types": [
                                    0
                                ],
                                "depth": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyGraphQueryResponse"
                                },
                                "example": [
                                    {
                                        "depth": 0,
                                        "link_order": "string",
                                        "link_id": "string",
                                        "link_type_id": 0,
                                        "from_node_id": "string",
                                        "from_graph_id": 0,
                                        "from_name": "string",
                                        "from_source_id": "string",
                                        "to_node_id": "string",
                                        "to_graph_id": 0,
                                        "to_name": "string",
                                        "to_source_id": "string",
                                        "valid_from_datetime": "string",
                                        "valid_until_datetime": "string",
                                        "id_disabled": true
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/node/create": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-node-create",
                "description": "Create taxonomy node",
                "operationId": "taxonomy-node-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyNodeCreate"
                            },
                            "example": {
                                "graph_id": 0,
                                "no_links": 0,
                                "nodes": [
                                    {
                                        "name": "string",
                                        "source_id": "string",
                                        "notes": "string"
                                    }
                                ],
                                "links": [
                                    {
                                        "from_source_id": "string",
                                        "to_source_id": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/taxonomy/node/get": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-node-get",
                "description": "Returns a taxonomy node",
                "operationId": "taxonomy-node-get",
                "parameters": [
                    {
                        "name": "node_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "graph_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyNodeGet"
                                },
                                "example": {
                                    "node_id": "string",
                                    "node_type_id": 0,
                                    "graph_id": 0,
                                    "source_id": "string",
                                    "name": "string",
                                    "notes": "string",
                                    "metadata": "string",
                                    "inserted_datetime": "string",
                                    "updated_datetime": "string",
                                    "updated_by": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/node/get-orphans": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-node-get-orphans",
                "description": "Returns a taxonomy orphans",
                "operationId": "taxonomy-node-get-orphans",
                "parameters": [
                    {
                        "name": "graph_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyNodeGetOrphans"
                                },
                                "example": [
                                    {
                                        "node_id": "string",
                                        "node_type_id": 0,
                                        "graph_id": 0,
                                        "source_id": "string",
                                        "name": "string",
                                        "notes": "string",
                                        "metadata": "string",
                                        "inserted_datetime": "string",
                                        "updated_datetime": "string",
                                        "updated_by": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/node/query": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-node-query",
                "description": "Query taxonomy nodes",
                "operationId": "taxonomy-node-query",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyNodeQuery"
                            },
                            "example": {
                                "node_id": {},
                                "graph_id": {},
                                "name": {},
                                "source_id": {},
                                "notes": {},
                                "metadata": {},
                                "node_type_id": {},
                                "updated_by": {},
                                "inserted_datetime": {},
                                "updated_datetime": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyNodeQueryResponse"
                                },
                                "example": [
                                    {
                                        "node_id": "string",
                                        "node_type_id": 0,
                                        "graph_id": 0,
                                        "source_id": "string",
                                        "name": "string",
                                        "notes": "string",
                                        "metadata": "string",
                                        "inserted_datetime": "string",
                                        "updated_datetime": "string",
                                        "updated_by": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/node/update": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-node-update",
                "description": "Update taxonomy node",
                "operationId": "taxonomy-node-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyNodeUpdate"
                            },
                            "example": {
                                "node_id": "string",
                                "node_type_id": "string",
                                "graph_id": 0,
                                "source_id": "string",
                                "name": "string",
                                "notes": "string",
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyNodeGet"
                                },
                                "example": {
                                    "node_id": "string",
                                    "node_type_id": 0,
                                    "graph_id": 0,
                                    "source_id": "string",
                                    "name": "string",
                                    "notes": "string",
                                    "metadata": "string",
                                    "inserted_datetime": "string",
                                    "updated_datetime": "string",
                                    "updated_by": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/link/create": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-link-create",
                "description": "Create taxonomy link",
                "operationId": "taxonomy-link-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyLinkCreate"
                            },
                            "example": {
                                "links": [
                                    {
                                        "link_type_id": 0,
                                        "from_graph_id": 0,
                                        "from_node_id": "string",
                                        "to_graph_id": 0,
                                        "to_node_id": "string",
                                        "updated_by": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyLinkCreateResponse"
                                },
                                "example": [
                                    {
                                        "link_type_id": 0,
                                        "from_graph_id": 0,
                                        "from_node_id": "string",
                                        "to_graph_id": 0,
                                        "to_node_id": "string",
                                        "link_id": "string",
                                        "inserted_datetime": "string",
                                        "updated_datetime": "string",
                                        "updated_by": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/link/update": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-link-update",
                "description": "Update taxonomy link",
                "operationId": "taxonomy-link-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyLinkUpdate"
                            },
                            "example": {
                                "update_origin": 0,
                                "link": {
                                    "link_id": "string",
                                    "link_type_id": 0,
                                    "order": 0,
                                    "valid_from_datetime": "string",
                                    "valid_until_datetime": "string",
                                    "is_disabled": 0
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/taxonomy/link/delete": {
            "delete": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-link-delete",
                "description": "Deletes taxonomy links",
                "operationId": "taxonomy-link-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyLinkDelete"
                            },
                            "example": {
                                "links": {
                                    "link_id": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/taxonomy/link-type/get": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-link-type-get",
                "description": "Deletes taxonomy links",
                "operationId": "taxonomy-link-type-get",
                "parameters": [
                    {
                        "name": "link_type_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyLinkTypeGet"
                                },
                                "example": [
                                    {
                                        "link_type_id": 0,
                                        "parent_link_type": "string",
                                        "name": "string",
                                        "notes": "string",
                                        "metadata_schema": "string",
                                        "inserted_datetime": "string",
                                        "updated_datetime": "string",
                                        "updated_by": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/node-product/create": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-node-product-create",
                "description": "Creates taxonomy node product. If by_source_id is True, graph_id is required.",
                "operationId": "taxonomy-node-product-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyNodeProductCreateRequest"
                            },
                            "example": {
                                "node_products": [
                                    {
                                        "node_product": "string"
                                    }
                                ],
                                "graph_id": 0,
                                "by_source_id": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyNodeProductCreateResponse"
                                },
                                "example": {
                                    "node_products": [
                                        {
                                            "node_product": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/node-product/delete": {
            "delete": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-node-product-delete",
                "description": "Deletes taxonomy node products or products for node. node_id or node_product_ids needs to be provided.",
                "operationId": "taxonomy-node-product-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyNodeProductDeleteRequest"
                            },
                            "example": {
                                "node_id": 0,
                                "node_product_ids": [
                                    {
                                        "node_product_id": 0
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/taxonomy/node-product/get": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-node-product-get",
                "description": "Returns taxonomy node products or products for node. node_id or product_code needs to be provided.",
                "operationId": "taxonomy-node-product-get",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyNodeProductGetRequest"
                            },
                            "example": {
                                "node_id": 0,
                                "product_code": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyNodeProductGetResponse"
                                },
                                "example": [
                                    {
                                        "node_product_id": 0,
                                        "node_id": 0,
                                        "product_code": "string",
                                        "product_name": "string",
                                        "inserted_datetime": "string",
                                        "updated_datetime": "string",
                                        "updated_by": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/geocode/get": {
            "get": {
                "tags": [
                    "Geocode"
                ],
                "summary": "geocode-get",
                "description": "Returns geocode data for an address from Google's API",
                "operationId": "geocode-get",
                "parameters": [
                    {
                        "name": "address",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/segment/definition/get": {
            "get": {
                "tags": [
                    "Segment"
                ],
                "summary": "segment-definition-get",
                "description": "Returns information about the requested segment definition",
                "operationId": "segment-definition-get",
                "parameters": [
                    {
                        "name": "segment_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "segment_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SegmentDefinition"
                                },
                                "example": {
                                    "segment_id": "string",
                                    "segment_name": "string",
                                    "xandr_segment_name": "string",
                                    "description": "string",
                                    "segment_type": {
                                        "id": "string",
                                        "name": "string",
                                        "description": "string"
                                    },
                                    "tenants": "string",
                                    "tags": "string",
                                    "start_date": "string",
                                    "end_date": "string",
                                    "calculation_query": "string",
                                    "last_calculated": "string",
                                    "last_published": "string",
                                    "last_updated": "string",
                                    "last_updated_by": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/segment/definition/list": {
            "get": {
                "tags": [
                    "Segment"
                ],
                "summary": "segment-definition-list",
                "description": "Searches and lists segment definitions",
                "operationId": "segment-definition-list",
                "parameters": [
                    {
                        "name": "segment_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tenants",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_standard_segments",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SegmentDefinitionListResponse"
                                },
                                "example": {
                                    "results": [
                                        {
                                            "segment_id": "string",
                                            "segment_name": "string",
                                            "xandr_segment_name": "string",
                                            "description": "string",
                                            "segment_type": {
                                                "id": "string",
                                                "name": "string",
                                                "description": "string"
                                            },
                                            "tenants": "string",
                                            "tags": "string",
                                            "start_date": "string",
                                            "end_date": "string",
                                            "calculation_query": "string",
                                            "last_calculated": "string",
                                            "last_published": "string",
                                            "last_updated": "string",
                                            "last_updated_by": "string"
                                        }
                                    ],
                                    "total": 0,
                                    "next_offset": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/segment/definition/save": {
            "post": {
                "tags": [
                    "Segment"
                ],
                "summary": "segment-definition-save",
                "description": "Updates or inserts segment definition and returns segment definition data after modification",
                "operationId": "segment-definition-save",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SegmentDefinitionSave"
                            },
                            "example": {
                                "segment_id": "string",
                                "segment_name": "string",
                                "xandr_segment_name": "string",
                                "description": "string",
                                "segment_type_d": "string",
                                "tenants": "string",
                                "tags": "string",
                                "start_date": "string",
                                "end_date": "string",
                                "calculation_query": "string",
                                "last_updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SegmentDefinition"
                                },
                                "example": {
                                    "segment_id": "string",
                                    "segment_name": "string",
                                    "xandr_segment_name": "string",
                                    "description": "string",
                                    "segment_type": {
                                        "id": "string",
                                        "name": "string",
                                        "description": "string"
                                    },
                                    "tenants": "string",
                                    "tags": "string",
                                    "start_date": "string",
                                    "end_date": "string",
                                    "calculation_query": "string",
                                    "last_calculated": "string",
                                    "last_published": "string",
                                    "last_updated": "string",
                                    "last_updated_by": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/segment/destination/list": {
            "get": {
                "tags": [
                    "Segment"
                ],
                "summary": "segment-destination-list",
                "description": "Lists segment destinations",
                "operationId": "segment-destination-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SegmentDestinationListResponse"
                                },
                                "example": [
                                    {
                                        "destination_id": "string",
                                        "destination_type": "string",
                                        "destination_name": "string",
                                        "description": "string",
                                        "display_on_portal": true,
                                        "last_updated": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/segment/query/test": {
            "post": {
                "tags": [
                    "Segment"
                ],
                "summary": "segment-query-test",
                "description": "Tests segment query in databricks",
                "operationId": "segment-query-test",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SegmentQueryTest"
                            },
                            "example": {
                                "tenant_ids": "string",
                                "query": "string",
                                "segment_type_id": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/segment/tag/list": {
            "get": {
                "tags": [
                    "Segment"
                ],
                "summary": "segment-tag-list",
                "description": "Lists segment tags",
                "operationId": "segment-tag-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SegmentTagListResponse"
                                },
                                "example": [
                                    {
                                        "id": 0,
                                        "name": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/graph/diff": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-graph-diff",
                "description": "Compares a persisted graph against a json representation of the graph",
                "operationId": "taxonomy-graph-diff",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyGraphDiffRequest"
                            },
                            "example": {
                                "default_link_type_id": 0,
                                "graph": {
                                    "graph_id": 0
                                },
                                "nodes": [
                                    {
                                        "name": "string",
                                        "source_id": "string",
                                        "notes": "string",
                                        "metadata": "string"
                                    }
                                ],
                                "links": [
                                    {
                                        "from_source_id": "string",
                                        "to_source_id": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyGraphDiffResponse"
                                },
                                "example": {
                                    "graph": {
                                        "graph_id": 0,
                                        "topology_id": 0,
                                        "name": "string",
                                        "notes": "string",
                                        "root_node_id": "string",
                                        "inserted_datetime": "string",
                                        "updated_datetime": "string",
                                        "updated_by": "string"
                                    },
                                    "nodes": [
                                        {
                                            "action": "string",
                                            "node": {
                                                "name": "string",
                                                "source_id": "string",
                                                "notes": "string",
                                                "metadata": "string",
                                                "node_type_id": 0,
                                                "node_id": "string",
                                                "graph_id": 0
                                            }
                                        }
                                    ],
                                    "links": [
                                        {
                                            "action": "string",
                                            "node": {
                                                "from_source_id": "string",
                                                "to_source_id": "string",
                                                "link_type_id": "string"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/graph/export": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-graph-export",
                "description": "Exports graph as JSON",
                "operationId": "taxonomy-graph-export",
                "parameters": [
                    {
                        "name": "graph_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyGraphExportResponse"
                                },
                                "example": {
                                    "graph": {
                                        "graph_id": 0,
                                        "topology_id": 0,
                                        "name": "string",
                                        "notes": "string",
                                        "root_node_id": "string",
                                        "inserted_datetime": "string",
                                        "updated_datetime": "string",
                                        "updated_by": "string"
                                    },
                                    "nodes": [
                                        {
                                            "node_id": "string",
                                            "node_type_id": 0,
                                            "graph_id": 0,
                                            "source_id": "string",
                                            "name": "string",
                                            "notes": "string",
                                            "metadata": "string",
                                            "inserted_datetime": "string",
                                            "updated_datetime": "string",
                                            "updated_by": "string"
                                        }
                                    ],
                                    "links": [
                                        {
                                            "link_id": "string",
                                            "link_type_id": 0,
                                            "from_graph_id": 0,
                                            "from_node_id": "string",
                                            "from_source_id": "string",
                                            "to_graph_id": 0,
                                            "to_node_id": "string",
                                            "to_source_id": "string",
                                            "link_order": 0,
                                            "metadata": "string",
                                            "valid_from_datetime": "string",
                                            "valid_until_datetime": "string",
                                            "is_disabled": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/banner-graph/create": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-banner-graph-create",
                "description": "Create a record that registers a graph to a banner (tenant) for a specific purpose.",
                "operationId": "taxonomy-banner-graph-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyBannerGraphCreateRequest"
                            },
                            "example": {
                                "banner_id": "string",
                                "graph_id": 0,
                                "node_id": "string",
                                "graph_purpose_id": 0,
                                "graph_status_id": 0,
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyBannerGraphGetResponse"
                                },
                                "example": {
                                    "banner_graph_id": "string",
                                    "banner_id": "string",
                                    "graph_id": 0,
                                    "node_id": "string",
                                    "graph_purpose_id": 0,
                                    "graph_status_id": 0,
                                    "updated_by": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/banner-graph/get": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-banner-graph-get",
                "description": "Get a banner graph record by either the record id, the banner_id or the graph_id.",
                "operationId": "taxonomy-banner-graph-get",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyBannerGraphGetRequest"
                            },
                            "example": {
                                "banner_graph_id": "string",
                                "banner_id": "string",
                                "graph_id": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyBannerGraphGetResponse"
                                },
                                "example": {
                                    "banner_graph_id": "string",
                                    "banner_id": "string",
                                    "graph_id": 0,
                                    "node_id": "string",
                                    "graph_purpose_id": 0,
                                    "graph_status_id": 0,
                                    "updated_by": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/banner-graph/update": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-banner-graph-update",
                "description": "Allows limited PATCH type update to banner graph records.",
                "operationId": "taxonomy-banner-graph-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyBannerGraphUpdateRequest"
                            },
                            "example": {
                                "banner_graph_id": 0,
                                "node_id": "string",
                                "graph_status_id": 0,
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyBannerGraphGetResponse"
                                },
                                "example": {
                                    "banner_graph_id": "string",
                                    "banner_id": "string",
                                    "graph_id": 0,
                                    "node_id": "string",
                                    "graph_purpose_id": 0,
                                    "graph_status_id": 0,
                                    "updated_by": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/banner-graph/delete": {
            "delete": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-banner-graph-delete",
                "description": "Delete a banner_graph record by either its record id or by the banner_id and the purpose.",
                "operationId": "taxonomy-banner-graph-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyNodeProductDeleteRequest"
                            },
                            "example": {
                                "node_id": 0,
                                "node_product_ids": [
                                    {
                                        "node_product_id": 0
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/taxonomy/node-tenant-product/create": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-node-tenant-product-create",
                "description": "Creates taxonomy node-tenant product. If by_source_id is True, graph_id is required.",
                "operationId": "taxonomy-node-tenant-product-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyNodeTenantProductCreateRequest"
                            },
                            "example": {
                                "tenant_id": "string",
                                "node_products": [
                                    {
                                        "node_tanant_product": "string"
                                    }
                                ],
                                "graph_id": 0,
                                "by_source_id": 0,
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyNodeTenantProductCreateResponse"
                                },
                                "example": {
                                    "node_products": [
                                        {
                                            "node_product": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/node-tenant-product/autoclassify": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-node-tenant-product-autoclassify",
                "description": "Creates a set of node-tenant-product records by correlating tenant_products against existing Classification graph and node_products.",
                "operationId": "taxonomy-node-tenant-product-autoclassify",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyNodeTenantProductAutoclassifyRequest"
                            },
                            "example": {
                                "tenant_id": "string",
                                "graph_id": 0,
                                "updated_by": "string",
                                "incremental": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/taxonomy/node-tenant-product/autocat": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-node-tenant-product-autocat",
                "description": "Creates a set of node-tenant-product records by tracing graph links from Classification nodes for products to the tenant Classification Graph leaf nodes and selecting shortest path.",
                "operationId": "taxonomy-node-tenant-product-autocat",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyNodeTenantProductAutocatRequest"
                            },
                            "example": {
                                "tenant_id": "string",
                                "classification_graph_id": 0,
                                "category_graph_id": 0,
                                "classification_link_type_id": 0,
                                "cross_link_type_id": 0,
                                "category_link_type_id": 0,
                                "updated_by": "string",
                                "incremental": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/taxonomy/node-tenant-product/export": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-node-tenant-product-export",
                "description": "Exports node-tenant products for a given tenant and graph. This is for Tenant product-catalog import mapping.",
                "operationId": "taxonomy-node-tenant-product-export",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "graph_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyNodeTenantProductExportResponse"
                                },
                                "example": {
                                    "tenant_id": "string",
                                    "graph_id": 0,
                                    "page_size": 0,
                                    "page": 0,
                                    "item_code_category_map": [
                                        {
                                            "item_code": "string",
                                            "categories": [
                                                "string"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/config/banner-sftp/get": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "config-banner-sftp-get",
                "description": "Returns information about the requested banner sftp config",
                "operationId": "config-banner-sftp-get",
                "parameters": [
                    {
                        "name": "banner_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigBannerSftp"
                                },
                                "example": {
                                    "banner_id": "string",
                                    "banner_short_name": "string",
                                    "account_type": {
                                        "id": 0,
                                        "name": "string",
                                        "parent_id": "string"
                                    },
                                    "server": {
                                        "host": "string",
                                        "port": 0
                                    },
                                    "accounts": [
                                        {
                                            "type": "string",
                                            "username": "string",
                                            "container": "string",
                                            "root_folder": "string"
                                        }
                                    ],
                                    "public_keys": [
                                        {
                                            "distplay_name": "string",
                                            "key_data": "string"
                                        }
                                    ],
                                    "status": "string",
                                    "created": "string",
                                    "last_updated": "string",
                                    "updated_by": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/config/banner-sftp/list": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "config-banner-sftp-list",
                "description": "Lists banner sftp configs",
                "operationId": "config-banner-sftp-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigBannerSftpListResponse"
                                },
                                "example": [
                                    {
                                        "banner_id": "string",
                                        "banner_short_name": "string",
                                        "account_type": {
                                            "id": 0,
                                            "name": "string",
                                            "parent_id": "string"
                                        },
                                        "server": {
                                            "host": "string",
                                            "port": 0
                                        },
                                        "accounts": [
                                            {
                                                "type": "string",
                                                "username": "string",
                                                "container": "string",
                                                "root_folder": "string"
                                            }
                                        ],
                                        "public_keys": [
                                            {
                                                "distplay_name": "string",
                                                "key_data": "string"
                                            }
                                        ],
                                        "status": "string",
                                        "created": "string",
                                        "last_updated": "string",
                                        "updated_by": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/config/banner-sftp/save": {
            "post": {
                "tags": [
                    "Configuration"
                ],
                "summary": "config-banner-sftp-save",
                "description": "Updates or inserts banner sftp config and returns banner sfpt config data after modification",
                "operationId": "config-banner-sftp-save",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfigBannerSftpSave"
                            },
                            "example": {
                                "banner_id": "string",
                                "account_type": {
                                    "id": 0,
                                    "name": "string",
                                    "parent_id": "string"
                                },
                                "server": {
                                    "host": "string",
                                    "port": 0
                                },
                                "accounts": [
                                    {
                                        "type": "string",
                                        "container": "string",
                                        "root_folder": "string"
                                    }
                                ],
                                "public_keys": [
                                    {
                                        "distplay_name": "string",
                                        "key_data": "string"
                                    }
                                ],
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigBannerSftp"
                                },
                                "example": {
                                    "banner_id": "string",
                                    "banner_short_name": "string",
                                    "account_type": {
                                        "id": 0,
                                        "name": "string",
                                        "parent_id": "string"
                                    },
                                    "server": {
                                        "host": "string",
                                        "port": 0
                                    },
                                    "accounts": [
                                        {
                                            "type": "string",
                                            "username": "string",
                                            "container": "string",
                                            "root_folder": "string"
                                        }
                                    ],
                                    "public_keys": [
                                        {
                                            "distplay_name": "string",
                                            "key_data": "string"
                                        }
                                    ],
                                    "status": "string",
                                    "created": "string",
                                    "last_updated": "string",
                                    "updated_by": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/banner-graph/publish": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-banner-graph-publish",
                "description": "Publishes the graph associated with the banner-graph to PGSql at the specified environment.",
                "operationId": "taxonomy-banner-graph-publish",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxonomyBannerGraphPublishRequest"
                            },
                            "example": {
                                "banner_graph_id": 0,
                                "environment": "string",
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyBannerGraphPublishResponse"
                                },
                                "example": {
                                    "status": "string",
                                    "nodes_published": 0,
                                    "links_published": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/banner-graph-publish-log/list": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-banner-graph-publish-log-list",
                "description": "list publication log for banner-graph.",
                "operationId": "taxonomy-banner-graph-publish-log-list",
                "parameters": [
                    {
                        "name": "banner_graph_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyBannerGraphPublishLogListResponse"
                                },
                                "example": {
                                    "banner_graph_publish_id": 0,
                                    "banner_graph_id": 0,
                                    "environment": "string",
                                    "success": true,
                                    "message": "string",
                                    "published_datetime": "string",
                                    "updated_by": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/config/workflow-request/create": {
            "post": {
                "tags": [
                    "Configuration"
                ],
                "summary": "config-workflow-request-create",
                "description": "Create a workflow request",
                "operationId": "config-workflow-request-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfigWorkflowRequestCreate"
                            },
                            "example": {
                                "banner_id": "string",
                                "workflow_id": "string",
                                "payload": {},
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigWorkflowRequestCreateResponse"
                                },
                                "example": {
                                    "request_id": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/config/workflow-request/status": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "config-workflow-request-status",
                "description": "Get a workflow request status",
                "operationId": "config-workflow-request-status",
                "parameters": [
                    {
                        "name": "request_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigWorkflowRequestStatusResponse"
                                },
                                "example": {
                                    "request_id": "string",
                                    "workflow_id": "string",
                                    "workflow_name": "string",
                                    "banner_id": "string",
                                    "status": "string",
                                    "retries": 0,
                                    "comments": "string",
                                    "request_timestamp": "string",
                                    "steps": [
                                        {
                                            "step_id": "string",
                                            "step_name": "string",
                                            "step_order": 0,
                                            "status": "string",
                                            "status_code": 0,
                                            "step_completed_timestamp": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/config/sftp-container/create": {
            "post": {
                "tags": [
                    "Configuration"
                ],
                "summary": "config-sftp-container-create",
                "description": "Create blob container for SFTP",
                "operationId": "config-sftp-container-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfigAzureSFTP"
                            },
                            "example": {
                                "user_name": "string",
                                "accounts": [
                                    {
                                        "type": "string",
                                        "container": "string",
                                        "root_folder": "string",
                                        "folders": [
                                            "string"
                                        ]
                                    }
                                ],
                                "public_keys": [
                                    {
                                        "display_name": "string",
                                        "key_data": "string"
                                    }
                                ],
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/config/sftp-user/create": {
            "post": {
                "tags": [
                    "Configuration"
                ],
                "summary": "config-sftp-user-create",
                "description": "Create blob user for SFTP",
                "operationId": "config-sftp-user-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfigAzureSFTP"
                            },
                            "example": {
                                "user_name": "string",
                                "accounts": [
                                    {
                                        "type": "string",
                                        "container": "string",
                                        "root_folder": "string",
                                        "folders": [
                                            "string"
                                        ]
                                    }
                                ],
                                "public_keys": [
                                    {
                                        "display_name": "string",
                                        "key_data": "string"
                                    }
                                ],
                                "updated_by": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/taxonomy/graph/clone": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-graph-clone",
                "description": "Clone taxonomy graph",
                "operationId": "taxonomy-graph-clone",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/taxonomy/graph/batch": {
            "post": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-graph-batch",
                "description": "Batch taxonomy graph",
                "operationId": "taxonomy-graph-batch",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/image/upload/batch": {
            "post": {
                "tags": [
                    "Image"
                ],
                "summary": "image-upload-batch",
                "description": "uploads a batch of images to image storage account",
                "operationId": "image-upload-batch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImageUploadBatchRequest"
                            },
                            "example": [
                                {
                                    "file_name": "string",
                                    "image_data": "string",
                                    "image_type": "string",
                                    "preserve_filename": true
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageGetBatchResponse"
                                },
                                "example": [
                                    {
                                        "image_id": 0,
                                        "original_image_url": "string",
                                        "image_url": "string",
                                        "image_type": "string",
                                        "external_reference": [
                                            {}
                                        ],
                                        "last_updated": "string",
                                        "status": "string",
                                        "last_refresh_date": "string",
                                        "comments": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/filemover/get": {
            "get": {
                "tags": [
                    "FileMover"
                ],
                "summary": "filemover-get",
                "description": "Returns information about the requested FileMover config",
                "operationId": "filemover-get",
                "parameters": [
                    {
                        "name": "configuration_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/filemover/list": {
            "get": {
                "tags": [
                    "FileMover"
                ],
                "summary": "filemover-list",
                "description": "Returns information about the requested FileMover configs",
                "operationId": "filemover-list",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/filemover/save": {
            "post": {
                "tags": [
                    "FileMover"
                ],
                "summary": "filemover-save",
                "description": "Updates or inserts FilerMover config and returns FileMover config after modification",
                "operationId": "filemover-save",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/telemetry/adimpression/count": {
            "post": {
                "tags": [
                    "Telemetry"
                ],
                "summary": "telemetry-adimpression-count",
                "description": "Gets ad impression count",
                "operationId": "telemetry-adimpression-count",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdImpressionCountRequest"
                            },
                            "example": {
                                "ad_impression_id": "string",
                                "tenant_id": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdImpressionCountResponse"
                                },
                                "example": {
                                    "tenant_id": "string",
                                    "ad_impression_id": "string",
                                    "count": 0,
                                    "last_inserted": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/config/get": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-config-get",
                "description": "Gets the taxonomy configuration for the environment",
                "operationId": "taxonomy-config-get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/taxonomy/report/noclass-tenant-cat": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-report-noclass-tenant-cat",
                "description": "A report on which tenant product categories could not be assigned a Classification node, and which GTINs are included in this tenant category",
                "operationId": "noclass-tenant-cat",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "graph_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyReportNoClassTenantCategory"
                                },
                                "example": {
                                    "tenant_product_category": "string",
                                    "item_count": 0,
                                    "product_codes": [
                                        "string"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/report/tenant-product-cat": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-report-tenant-product-categorization",
                "description": "provide a flexible report to identify which tenant products have been assigned to which Categories.",
                "operationId": "tenant-product-cat",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "classification_graph_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category_graph_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "uncategorized",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "overcategorized",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "item_code",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyReportTenantProductCategories"
                                },
                                "example": {
                                    "tenant_id": "string",
                                    "item_code": "string",
                                    "tenant_product_name": "string",
                                    "tenant_product_description": "string",
                                    "tenant_product_brand": "string",
                                    "tenant_product_category": "string",
                                    "node_tenant_product_source": "string",
                                    "node_tenant_product_status": "string",
                                    "category_node_id": "string",
                                    "category_node_source_id": "string",
                                    "classification_node_id": "string",
                                    "classification_node_source_id": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxonomy/report/cat-product-fill": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "taxonomy-report-cat-product-fill",
                "description": "A report on how tenant products were categorized",
                "operationId": "cat-product-fill",
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_graph_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "source_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonomyReportCategoryProductFill"
                                },
                                "example": {
                                    "node_id": "string",
                                    "source_id": "string",
                                    "count": 0,
                                    "itemcode": "string",
                                    "productName": "string",
                                    "brand": "string",
                                    "category": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/promotion/search": {
            "get": {
                "tags": [
                    "DCA Promotions"
                ],
                "summary": "promotion-search",
                "description": "Search dca promotions",
                "operationId": "promotion-search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/promotion/save": {
            "post": {
                "tags": [
                    "DCA Promotions"
                ],
                "summary": "promotion-save",
                "description": "Save dca promotions",
                "operationId": "promotion-save",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/promotion/flag-upc": {
            "put": {
                "tags": [
                    "DCA Promotions"
                ],
                "summary": "promotion-flag-update",
                "description": "Flag dca promotion upc as featured",
                "operationId": "promotion-flag-update",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/segment/distribution/list": {
            "get": {
                "tags": [
                    "Segment"
                ],
                "summary": "segment-distribution-list",
                "description": "Lists LiveRamp distributions for segments",
                "operationId": "segment-distribution-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SegmentDistributionListResponse"
                                },
                                "example": [
                                    {
                                        "distribution_id": "string",
                                        "distribution_name": "string",
                                        "status": "string",
                                        "expires_at": "string",
                                        "last_updated": "string"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RefreshRequest": {
                "required": [
                    "tenant_id",
                    "domain"
                ],
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "domain_item_id": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "RefreshRequest"
                }
            },
            "RefreshResponse": {
                "type": "object",
                "properties": {
                    "refresh_request_id": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "RefreshResponse"
                }
            },
            "RefreshStatusInProgress": {
                "type": "object",
                "properties": {
                    "refresh_request_id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "RefreshStatusInProgress"
                }
            },
            "RefreshStatusCompleted": {
                "type": "object",
                "properties": {
                    "refresh_request_id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "record_count": {
                        "type": "integer"
                    },
                    "fullfilled_datetime_utc": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "RefreshStatusCompleted"
                }
            },
            "StoreMetadataSearch": {
                "required": [
                    "tenant_id",
                    "id",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "StoreMetadataSearchResponse": {
                "required": [
                    "store_id",
                    "chain_id",
                    "tenant_id",
                    "tenant_store_id",
                    "name",
                    "description"
                ],
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "store_id": {
                            "type": "string"
                        },
                        "chain_id": {
                            "type": "string"
                        },
                        "tenant_id": {
                            "type": "string"
                        },
                        "tenant_store_id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        }
                    }
                }
            },
            "StoreListResponse": {
                "required": [
                    "store_id",
                    "chain_id",
                    "tenant_id",
                    "tenant_store_id",
                    "name",
                    "description"
                ],
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "store_id": {
                            "type": "string"
                        },
                        "chain_id": {
                            "type": "string"
                        },
                        "tenant_id": {
                            "type": "string"
                        },
                        "tenant_store_id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        }
                    }
                }
            },
            "StoreGetResponse": {
                "required": [
                    "store_id",
                    "tenant_id",
                    "update_datetime_utc",
                    "process_status",
                    "ledger_id",
                    "context_id",
                    "store_info",
                    "latitude",
                    "longitude"
                ],
                "type": "object",
                "properties": {
                    "store_id": {
                        "type": "string"
                    },
                    "tenant_id": {
                        "type": "string"
                    },
                    "update_datetime_utc": {
                        "type": "number"
                    },
                    "process_status": {
                        "type": "string"
                    },
                    "ledger_id": {
                        "type": "string"
                    },
                    "context_id": {
                        "type": "string"
                    },
                    "store_info": {
                        "required": [
                            "tenant_store_id",
                            "name",
                            "address1",
                            "city",
                            "state",
                            "postal_code"
                        ],
                        "type": "object",
                        "properties": {
                            "chain_id": {
                                "type": "string"
                            },
                            "tenant_store_id": {
                                "type": "string"
                            },
                            "tenant_chain_id": {
                                "type": "string"
                            },
                            "insert_datetime_utc": {
                                "type": "number"
                            },
                            "update_datetime_utc": {
                                "type": "number"
                            },
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "latitude": {
                                "type": "number"
                            },
                            "longitude": {
                                "type": "number"
                            },
                            "address1": {
                                "type": "string"
                            },
                            "address2": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string"
                            },
                            "postal_code": {
                                "type": "string"
                            },
                            "status": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string"
                                    },
                                    "as_of_date": {
                                        "type": "string"
                                    }
                                }
                            },
                            "next_status": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string"
                                    },
                                    "as_of_date": {
                                        "type": "string"
                                    }
                                }
                            },
                            "phone_numbers": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "hours": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "day": {
                                            "type": "string"
                                        },
                                        "hours": {
                                            "type": "object",
                                            "properties": {
                                                "open": {
                                                    "type": "string"
                                                },
                                                "close": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "payments": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "languages": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "amenities": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "images": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "url": {
                                            "type": "string"
                                        },
                                        "purpose": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "websites": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "department_details": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "as_of_date": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "next_status": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "as_of_date": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "hours": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "day": {
                                                        "type": "string"
                                                    },
                                                    "hours": {
                                                        "type": "object",
                                                        "properties": {
                                                            "open": {
                                                                "type": "string"
                                                            },
                                                            "close": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "phone_numbers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "value": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "images": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": "string"
                                                    },
                                                    "purpose": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "websites": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "value": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "metadata": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "StoreUpdateRequest": {
                "required": [
                    "tenant_id",
                    "stores"
                ],
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "stores": {
                        "type": "array",
                        "items": {
                            "required": [
                                "tenant_store_id",
                                "name",
                                "address1",
                                "city",
                                "state",
                                "postal_code",
                                "doc_version"
                            ],
                            "type": "object",
                            "properties": {
                                "tenant_store_id": {
                                    "type": "string"
                                },
                                "tenant_chain_id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "address1": {
                                    "type": "string"
                                },
                                "address2": {
                                    "type": "string"
                                },
                                "city": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "string"
                                },
                                "country": {
                                    "type": "string"
                                },
                                "postal_code": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "as_of_date": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "next_status": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "as_of_date": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "phone_numbers": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "hours": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "day": {
                                                "type": "string"
                                            },
                                            "hours": {
                                                "type": "object",
                                                "properties": {
                                                    "open": {
                                                        "type": "string"
                                                    },
                                                    "close": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "payments": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "languages": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "amenities": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "images": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "url": {
                                                "type": "string"
                                            },
                                            "purpose": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "websites": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "time_zone": {
                                    "type": "string"
                                },
                                "latitude": {
                                    "type": "number"
                                },
                                "longitude": {
                                    "type": "number"
                                },
                                "department_details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "type": "object",
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    },
                                                    "as_of_date": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "next_status": {
                                                "type": "object",
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    },
                                                    "as_of_date": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "hours": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "day": {
                                                            "type": "string"
                                                        },
                                                        "hours": {
                                                            "type": "object",
                                                            "properties": {
                                                                "open": {
                                                                    "type": "string"
                                                                },
                                                                "close": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "phone_numbers": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "value": {
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "images": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "url": {
                                                            "type": "string"
                                                        },
                                                        "purpose": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "websites": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "value": {
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "metadata": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    },
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "doc_version": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            },
            "TenantListResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "tenant_id": {
                            "type": "string"
                        },
                        "display_name": {
                            "type": "string"
                        },
                        "parent_id": {
                            "type": "string"
                        },
                        "chain_id": {
                            "type": "string"
                        },
                        "dev_only": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "CampaignGetResponse": {
                "required": [
                    "campaign_code",
                    "campaign_name",
                    "campaign_start_date",
                    "campaign_end_date",
                    "campaign_status",
                    "advertiser_name",
                    "retailer_name",
                    "mapped_upc_count",
                    "upc_list"
                ],
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "campaign_code": {
                            "type": "string"
                        },
                        "campaign_name": {
                            "type": "string"
                        },
                        "campaign_start_date": {
                            "type": "string"
                        },
                        "campaign_end_date": {
                            "type": "string"
                        },
                        "campaign_status": {
                            "type": "string"
                        },
                        "advertiser_name": {
                            "type": "string"
                        },
                        "retailer_name": {
                            "type": "string"
                        },
                        "mapped_upc_count": {
                            "type": "number"
                        },
                        "upc_list": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "upc": {
                                        "type": "string"
                                    },
                                    "featured": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "CampaignUpdateRequest": {
                "required": [
                    "campaign_code",
                    "upc_list"
                ],
                "type": "object",
                "properties": {
                    "campaign_code": {
                        "type": "string"
                    },
                    "upc_list": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "upc": {
                                    "type": "string"
                                },
                                "featured": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "CampaignUpdateRequest"
                }
            },
            "DeletedProfilesResponse": {
                "type": "object",
                "properties": {
                    "swiftly_user_id": {
                        "type": "string"
                    },
                    "tenant_id": {
                        "type": "string"
                    },
                    "loyalty_id": {
                        "type": "string"
                    },
                    "updated_datetime": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "DeletedProfilesResponse"
                }
            },
            "TenantUsersResponse": {
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "customer_id": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "download_date": {
                        "type": "string"
                    },
                    "point_balance": {
                        "type": "string"
                    },
                    "points_expiring": {
                        "type": "string"
                    },
                    "rewards_expiring": {
                        "type": "string"
                    },
                    "preferred_store_location": {
                        "type": "string"
                    },
                    "email_opt_in": {
                        "type": "string"
                    },
                    "push_opt_in": {
                        "type": "string"
                    },
                    "eaiv_over_21": {
                        "type": "string"
                    },
                    "eaiv_date": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    },
                    "dob": {
                        "type": "string"
                    },
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "last_app_activity_datetime": {
                        "type": "string"
                    },
                    "updated_datetime": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TenantUsersResponse"
                }
            },
            "ProductUpsertRequest": {
                "required": [
                    "product_code",
                    "product_code_type",
                    "product_name",
                    "product_image"
                ],
                "type": "object",
                "properties": {
                    "product_code": {
                        "type": "string"
                    },
                    "product_code_type": {
                        "type": "string"
                    },
                    "product_name": {
                        "type": "string"
                    },
                    "product_image": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "brand": {
                        "type": "string"
                    },
                    "supplemental_images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "ProductUpsertRequest"
                }
            },
            "ProductUpsertResponse": {
                "type": "object",
                "properties": {
                    "product_code": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "ProductUpsertResponse"
                }
            },
            "ProductGetResponse": {
                "type": "object",
                "properties": {
                    "product_code": {
                        "type": "string"
                    },
                    "product_code_type": {
                        "type": "string"
                    },
                    "product_name": {
                        "type": "string"
                    },
                    "product_image": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "brand": {
                        "type": "string"
                    },
                    "supplemental_images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "ProductGetResponse"
                }
            },
            "ProductListGetResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "product_code": {
                                    "type": "string"
                                },
                                "product_code_type": {
                                    "type": "string"
                                },
                                "product_name": {
                                    "type": "string"
                                },
                                "product_image": {
                                    "type": "string"
                                },
                                "is_active": {
                                    "type": "boolean"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "brand": {
                                    "type": "string"
                                },
                                "supplemental_images": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "total": {
                        "type": "integer"
                    },
                    "next_offset": {
                        "type": "integer"
                    }
                },
                "xml": {
                    "name": "ProductListGetResponse"
                }
            },
            "SwiftlyCatalogProductUpdateRequest": {
                "required": [
                    "product_code",
                    "is_active"
                ],
                "type": "object",
                "properties": {
                    "product_code": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "xml": {
                    "name": "SwiftlyCatalogProductUpdateRequest"
                }
            },
            "SwiftlyCatalogProductUpdateResponse": {
                "type": "object",
                "properties": {
                    "product_code": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "SwiftlyCatalogProductUpdateResponse"
                }
            },
            "SwiftlyCatalogProductGetResponse": {
                "type": "object",
                "properties": {
                    "product_code": {
                        "type": "string"
                    },
                    "product_code_type": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "attribute_name": {
                                    "type": "string"
                                },
                                "attribute_value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "SwiftlyCatalogProductGetResponse"
                }
            },
            "SwiftlyCatalogProductListGetResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "product_code": {
                                    "type": "string"
                                },
                                "product_code_type": {
                                    "type": "string"
                                },
                                "is_active": {
                                    "type": "boolean"
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attribute_name": {
                                                "type": "string"
                                            },
                                            "attribute_value": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "total": {
                        "type": "integer"
                    },
                    "next_offset": {
                        "type": "integer"
                    }
                },
                "xml": {
                    "name": "SwiftlyCatalogProductListGetResponse"
                }
            },
            "ProductFlagListResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "product_flag_id": {
                            "type": "string"
                        },
                        "product_flag_name": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "ProductFlagListResponse"
                }
            },
            "ProductFlagUpdateResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "integer"
                    }
                },
                "xml": {
                    "name": "ProductFlagUpdateResponse"
                }
            },
            "ProductFlagDeleteResponse": {
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "retailer_flag_code": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    }
                },
                "xml": {
                    "name": "ProductFlagDeleteResponse"
                }
            },
            "ProductFlagGetResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "tenant_id": {
                            "type": "string"
                        },
                        "retailer_flag_code": {
                            "type": "string"
                        },
                        "display_name": {
                            "type": "string"
                        },
                        "flag_name": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "ProductFlagGetResponse"
                }
            },
            "ProductFlagCreateRequest": {
                "required": [
                    "tenant_id",
                    "retailer_flag_code",
                    "display_name",
                    "flag_name"
                ],
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "retailer_flag_code": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "flag_name": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "ProductFlagCreateRequest"
                }
            },
            "ProductFlagUpdateRequest": {
                "required": [
                    "tenant_id",
                    "retailer_flag_code"
                ],
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "retailer_flag_code": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "flag_name": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "ProductFlagUpdateRequest"
                }
            },
            "ProductFlagDeleteRequest": {
                "required": [
                    "tenant_id",
                    "retailer_flag_code"
                ],
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "retailer_flag_code": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "ProductFlagDeleteRequest"
                }
            },
            "ProductAttributePriorityListResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "tenant_id": {
                            "type": "string"
                        },
                        "attribute_id": {
                            "type": "integer"
                        },
                        "attribute_name": {
                            "type": "string"
                        },
                        "display_name": {
                            "type": "string"
                        },
                        "source_id": {
                            "type": "integer"
                        },
                        "source_name": {
                            "type": "string"
                        },
                        "source_code": {
                            "type": "string"
                        },
                        "priority": {
                            "type": "integer"
                        }
                    }
                },
                "xml": {
                    "name": "ProductAttributePriorityListResponse"
                }
            },
            "ProductAttributeOverrideListResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "tenant_id": {
                            "type": "string"
                        },
                        "product_code": {
                            "type": "string"
                        },
                        "attribute_id": {
                            "type": "integer"
                        },
                        "attribute_name": {
                            "type": "string"
                        },
                        "display_name": {
                            "type": "string"
                        },
                        "source_code": {
                            "type": "string"
                        },
                        "source_name": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "ProductAttributeOverrideListResponse"
                }
            },
            "RetailerProductListResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "product_code": {
                            "type": "string"
                        },
                        "product_name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "brand": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "RetailerProductListResponse"
                }
            },
            "ProductAttributePriorityCreateRequest": {
                "required": [
                    "tenant_id",
                    "attribute_id",
                    "source_id",
                    "priority",
                    "updated_by"
                ],
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "attribute_id": {
                        "type": "integer"
                    },
                    "priority": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "source_id": {
                                    "type": "integer"
                                },
                                "priority": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "ProductAttributePriorityCreateRequest"
                }
            },
            "ProductAttributeOverrideCreateRequest": {
                "required": [
                    "tenant_id",
                    "product_code",
                    "attribute_id",
                    "source_code",
                    "updated_by"
                ],
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "product_code": {
                        "type": "string"
                    },
                    "attribute_id": {
                        "type": "integer"
                    },
                    "source_code": {
                        "type": "string"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "ProductAttributePrProductAttributeOverrideCreateRequestiorityCreateRequest"
                }
            },
            "ProductAttributePriorityCreateResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "xml": {
                    "name": "ProductAttributePriorityCreateResponse"
                }
            },
            "ProductAttributeOverrideCreateResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "xml": {
                    "name": "ProductAttributeOverrideCreateResponse"
                }
            },
            "ProductAttributeListResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "attribute_id": {
                            "type": "integer"
                        },
                        "attribute_name": {
                            "type": "string"
                        },
                        "display_name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "ProductAttributeListResponse"
                }
            },
            "ProductSourceListResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "source_id": {
                            "type": "integer"
                        },
                        "source_name": {
                            "type": "string"
                        },
                        "source_code": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "tenant_id": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "ProductSourceListResponse"
                }
            },
            "ImageGetResponse": {
                "type": "object",
                "properties": {
                    "image_id": {
                        "type": "integer"
                    },
                    "original_image_url": {
                        "type": "string"
                    },
                    "image_url": {
                        "type": "string"
                    },
                    "image_type": {
                        "type": "string"
                    },
                    "external_reference": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "last_updated": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "last_refresh_date": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "ImageGetResponse"
                }
            },
            "ImageGetBatchResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "image_id": {
                            "type": "integer"
                        },
                        "original_image_url": {
                            "type": "string"
                        },
                        "image_url": {
                            "type": "string"
                        },
                        "image_type": {
                            "type": "string"
                        },
                        "external_reference": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        },
                        "last_updated": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string"
                        },
                        "last_refresh_date": {
                            "type": "string"
                        },
                        "comments": {
                            "type": "string"
                        }
                    },
                    "xml": {
                        "name": "ImageGetBatchResponse"
                    }
                }
            },
            "ImageListResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "image_id": {
                                    "type": "integer"
                                },
                                "original_image_url": {
                                    "type": "string"
                                },
                                "image_url": {
                                    "type": "string"
                                },
                                "image_type": {
                                    "type": "string"
                                },
                                "external_reference": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "last_updated": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "last_refresh_date": {
                                    "type": "string"
                                },
                                "comments": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "total": {
                        "type": "integer"
                    },
                    "next_offset": {
                        "type": "integer"
                    }
                },
                "xml": {
                    "name": "ImageListResponse"
                }
            },
            "ImageSubmitRequest": {
                "type": "object",
                "properties": {
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "image_type": {
                                    "type": "string"
                                },
                                "image_url": {
                                    "type": "string"
                                },
                                "external_reference": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "tenant_id": {
                                                "type": "string"
                                            },
                                            "product_code": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "ImageSubmitRequest"
                }
            },
            "ImageUploadRequest": {
                "type": "object",
                "properties": {
                    "file_name": {
                        "type": "string"
                    },
                    "image_data": {
                        "type": "string"
                    },
                    "image_type": {
                        "type": "string"
                    },
                    "preserve_filename": {
                        "type": "boolean"
                    }
                },
                "xml": {
                    "name": "ImageUploadRequest"
                }
            },
            "ImageUploadBatchRequest": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "file_name": {
                            "type": "string"
                        },
                        "image_data": {
                            "type": "string"
                        },
                        "image_type": {
                            "type": "string"
                        },
                        "preserve_filename": {
                            "type": "boolean"
                        }
                    },
                    "xml": {
                        "name": "ImageUploadBatchRequest"
                    }
                }
            },
            "UpcCleanGetResponse": {
                "type": "object",
                "properties": {
                    "upc": {
                        "type": "string"
                    },
                    "codes": {
                        "type": "object",
                        "properties": {
                            "UPC12": {
                                "type": "string"
                            },
                            "UPC11": {
                                "type": "string"
                            },
                            "GTIN14": {
                                "type": "string"
                            },
                            "EAN8": {
                                "type": "string"
                            },
                            "EAN13": {
                                "type": "string"
                            },
                            "UPCE": {
                                "type": "string"
                            }
                        }
                    }
                },
                "xml": {
                    "name": "UpcCleanGetResponse"
                }
            },
            "UpcCleanListRequest": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "xml": {
                    "name": "UpcCleanListRequest"
                }
            },
            "UpcCleanListResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "upc": {
                            "type": "string"
                        },
                        "codes": {
                            "type": "object",
                            "properties": {
                                "UPC12": {
                                    "type": "string"
                                },
                                "UPC11": {
                                    "type": "string"
                                },
                                "GTIN14": {
                                    "type": "string"
                                },
                                "EAN8": {
                                    "type": "string"
                                },
                                "EAN13": {
                                    "type": "string"
                                },
                                "UPCE": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "UpcCleanListResponse"
                }
            },
            "BannerConfigListResponse": {
                "type": "array",
                "items": {
                    "properties": {
                        "configuration_id": {
                            "type": "integer"
                        },
                        "configuration_name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "configuration_data_type_name": {
                            "type": "string"
                        },
                        "category": {
                            "type": "string"
                        },
                        "template": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "BannerConfigListResponse"
                }
            },
            "BannerGetResponse": {
                "type": "object",
                "properties": {
                    "banner_id": {
                        "type": "string"
                    },
                    "banner_short_name": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "configurations": {
                        "type": "object"
                    },
                    "last_updated": {
                        "type": "string"
                    },
                    "last_updated_ny": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "BannerGetResponse"
                }
            },
            "BannerListResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "banner_id": {
                                    "type": "string"
                                },
                                "banner_short_name": {
                                    "type": "string"
                                },
                                "display_name": {
                                    "type": "string"
                                },
                                "is_active": {
                                    "type": "boolean"
                                },
                                "configurations": {
                                    "type": "object"
                                },
                                "last_updated": {
                                    "type": "string"
                                },
                                "last_updated_ny": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "total": {
                        "type": "integer"
                    },
                    "next_offset": {
                        "type": "integer"
                    }
                },
                "xml": {
                    "name": "BannerListResponse"
                }
            },
            "BannerSaveRequest": {
                "type": "object",
                "properties": {
                    "banner_short_name": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "republish": {
                        "type": "boolean"
                    },
                    "configurations": {
                        "type": "object"
                    },
                    "banner_id": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "BannerSaveRequest"
                }
            },
            "BannerConfigUpdateRequest": {
                "type": "object",
                "properties": {
                    "banner_short_name": {
                        "type": "string"
                    },
                    "configuration_name": {
                        "type": "string"
                    },
                    "configuration_value": {
                        "type": "string"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "BannerConfigUpdateRequest"
                }
            },
            "DataExportSaveResponse": {
                "type": "object",
                "properties": {
                    "export_config_id": {
                        "type": "string"
                    },
                    "export_config_name": {
                        "type": "string"
                    },
                    "export_type_id": {
                        "type": "integer"
                    },
                    "tenant_id": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "object"
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "xml": {
                    "name": "DataExportSaveResponse"
                }
            },
            "DataExportSaveRequest": {
                "type": "object",
                "properties": {
                    "export_config_name": {
                        "type": "string"
                    },
                    "export_type_id": {
                        "type": "integer"
                    },
                    "tenant_id": {
                        "type": "integer"
                    },
                    "parameters": {
                        "type": "object"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "DataExportSaveRequest"
                }
            },
            "DataExportTypesListResponse": {
                "type": "object",
                "properties": {
                    "export_type_id": {
                        "type": "string"
                    },
                    "export_type_name": {
                        "type": "string"
                    },
                    "export_type_display_name": {
                        "type": "string"
                    },
                    "export_parameters": {
                        "type": "object"
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "xml": {
                    "name": "DataExportTypesListResponse"
                }
            },
            "TLogsSubmit": {
                "required": [
                    "tenant_id",
                    "trans_id",
                    "trans_datetime",
                    "store_id"
                ],
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "trans_id": {
                        "type": "string"
                    },
                    "trans_type": {
                        "type": "string"
                    },
                    "trans_datetime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "store_id": {
                        "type": "string"
                    },
                    "register_number": {
                        "type": "string"
                    },
                    "trans_number": {
                        "type": "string"
                    },
                    "retailer_loyalty_id": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransItemT2"
                        }
                    },
                    "redemptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransRedemptionT2"
                        }
                    },
                    "tender_cards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransTenderCardT2"
                        }
                    },
                    "retailer_customer_id": {
                        "type": "string"
                    }
                }
            },
            "TransItemT2": {
                "required": [
                    "item_code",
                    "trans_line_number",
                    "quantity",
                    "extended_price"
                ],
                "type": "object",
                "properties": {
                    "item_code": {
                        "type": "string"
                    },
                    "product_code": {
                        "type": "string"
                    },
                    "product_code_type": {
                        "type": "string"
                    },
                    "trans_line_number": {
                        "type": "number",
                        "format": "integer"
                    },
                    "unit_price": {
                        "type": "number",
                        "format": "float"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "float"
                    },
                    "extended_price": {
                        "type": "number",
                        "format": "float"
                    },
                    "currency": {
                        "type": "string",
                        "default": "USD"
                    },
                    "unit_of_measure": {
                        "type": "string"
                    }
                }
            },
            "TransRedemptionT2": {
                "required": [
                    "promotion_id",
                    "offer_discount"
                ],
                "type": "object",
                "properties": {
                    "promotion_id": {
                        "type": "string"
                    },
                    "item_code": {
                        "type": "string"
                    },
                    "product_code": {
                        "type": "string"
                    },
                    "offer_discount": {
                        "type": "number",
                        "format": "float"
                    },
                    "offer_face_value": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "TransTenderCardT2": {
                "type": "object",
                "properties": {
                    "card_hash": {
                        "type": "string"
                    },
                    "card_masked": {
                        "type": "string"
                    },
                    "auth_code": {
                        "type": "string"
                    },
                    "card_issuer": {
                        "type": "string"
                    },
                    "card_expiration": {
                        "type": "string",
                        "format": "date"
                    },
                    "is_ebt": {
                        "type": "boolean"
                    },
                    "tender_amount": {
                        "type": "number",
                        "format": "float"
                    },
                    "currency": {
                        "type": "string",
                        "default": "USD"
                    }
                },
                "xml": {
                    "name": "TLogsSubmit"
                }
            },
            "TaxonomyGraphList": {
                "type": "array",
                "items": {
                    "properties": {
                        "graph_id": {
                            "type": "integer"
                        },
                        "topology_id": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        },
                        "notes": {
                            "type": "string"
                        },
                        "root_node_id": {
                            "type": "string"
                        },
                        "inserted_datetime": {
                            "type": "string"
                        },
                        "updated_datetime": {
                            "type": "string"
                        },
                        "updated_by": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyGraphList"
                }
            },
            "TaxonomyGraphGet": {
                "type": "object",
                "properties": {
                    "graph_id": {
                        "type": "integer"
                    },
                    "topology_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "root_node_id": {
                        "type": "string"
                    },
                    "inserted_datetime": {
                        "type": "string"
                    },
                    "updated_datetime": {
                        "type": "string"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyGraphGet"
                }
            },
            "TaxonomyGraphCreate": {
                "required": [
                    "topology_id",
                    "name",
                    "notes",
                    "updated_by"
                ],
                "type": "object",
                "properties": {
                    "topology_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyGraphCreate"
                }
            },
            "TaxonomyGraphUpdate": {
                "required": [
                    "graph_id",
                    "name",
                    "notes",
                    "updated_by"
                ],
                "type": "object",
                "properties": {
                    "graph_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyGraphUpdate"
                }
            },
            "TaxonomyGraphDelete": {
                "required": [
                    "graph_id"
                ],
                "type": "object",
                "properties": {
                    "graph_id": {
                        "type": "integer"
                    }
                },
                "xml": {
                    "name": "TaxonomyGraphDelete"
                }
            },
            "TaxonomyGraph": {
                "required": [
                    "graph_id",
                    "name",
                    "notes"
                ],
                "type": "object",
                "properties": {
                    "graph_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyGraph"
                }
            },
            "TaxonomyNode": {
                "required": [
                    "name",
                    "source_id",
                    "notes"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "source_id": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyNode"
                }
            },
            "TaxonomyLink": {
                "required": [
                    "from_source_id",
                    "to_source_id"
                ],
                "type": "object",
                "properties": {
                    "from_source_id": {
                        "type": "string"
                    },
                    "to_source_id": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyLink"
                }
            },
            "TaxonomyGraphImport": {
                "required": [
                    "updated_by",
                    "default_link_type_id"
                ],
                "type": "object",
                "properties": {
                    "updated_by": {
                        "type": "string"
                    },
                    "default_link_type_id": {
                        "type": "integer"
                    },
                    "graph": {
                        "type": "object"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxonomyNode"
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxonomyLink"
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyGraphImport"
                }
            },
            "TaxonomyGraphQuery": {
                "required": [
                    "graph_id"
                ],
                "type": "object",
                "properties": {
                    "graph_id": {
                        "type": "integer"
                    },
                    "seed": {
                        "type": "object"
                    },
                    "dir": {
                        "type": "string"
                    },
                    "link_types": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "depth": {
                        "type": "integer"
                    }
                },
                "xml": {
                    "name": "TaxonomyGraphQuery"
                }
            },
            "TaxonomyGraphQueryResponse": {
                "type": "array",
                "items": {
                    "properties": {
                        "depth": {
                            "type": "integer"
                        },
                        "link_order": {
                            "type": "string"
                        },
                        "link_id": {
                            "type": "string"
                        },
                        "link_type_id": {
                            "type": "integer"
                        },
                        "from_node_id": {
                            "type": "string"
                        },
                        "from_graph_id": {
                            "type": "integer"
                        },
                        "from_name": {
                            "type": "string"
                        },
                        "from_source_id": {
                            "type": "string"
                        },
                        "to_node_id": {
                            "type": "string"
                        },
                        "to_graph_id": {
                            "type": "integer"
                        },
                        "to_name": {
                            "type": "string"
                        },
                        "to_source_id": {
                            "type": "string"
                        },
                        "valid_from_datetime": {
                            "type": "string"
                        },
                        "valid_until_datetime": {
                            "type": "string"
                        },
                        "id_disabled": {
                            "type": "boolean"
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyGraphQueryResponse"
                }
            },
            "TaxonomyGraphDiffRequest": {
                "required": [
                    "default_link_type_id",
                    "graph",
                    "nodes",
                    "links"
                ],
                "type": "object",
                "properties": {
                    "default_link_type_id": {
                        "type": "integer"
                    },
                    "graph": {
                        "type": "object",
                        "properties": {
                            "graph_id": {
                                "type": "integer"
                            }
                        }
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "source_id": {
                                    "type": "string"
                                },
                                "notes": {
                                    "type": "string"
                                },
                                "metadata": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "from_source_id": {
                                    "type": "string"
                                },
                                "to_source_id": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyGraphDiffRequest"
                }
            },
            "TaxonomyGraphDiffResponse": {
                "type": "object",
                "properties": {
                    "graph": {
                        "type": "object",
                        "properties": {
                            "graph_id": {
                                "type": "integer"
                            },
                            "topology_id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "notes": {
                                "type": "string"
                            },
                            "root_node_id": {
                                "type": "string"
                            },
                            "inserted_datetime": {
                                "type": "string"
                            },
                            "updated_datetime": {
                                "type": "string"
                            },
                            "updated_by": {
                                "type": "string"
                            }
                        }
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "action": {
                                    "type": "string"
                                },
                                "node": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "source_id": {
                                            "type": "string"
                                        },
                                        "notes": {
                                            "type": "string"
                                        },
                                        "metadata": {
                                            "type": "string"
                                        },
                                        "node_type_id": {
                                            "type": "integer"
                                        },
                                        "node_id": {
                                            "type": "string"
                                        },
                                        "graph_id": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "action": {
                                    "type": "string"
                                },
                                "node": {
                                    "type": "object",
                                    "properties": {
                                        "from_source_id": {
                                            "type": "string"
                                        },
                                        "to_source_id": {
                                            "type": "string"
                                        },
                                        "link_type_id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyGraphDiffResponse"
                }
            },
            "TaxonomyGraphExportResponse": {
                "type": "object",
                "properties": {
                    "graph": {
                        "type": "object",
                        "properties": {
                            "graph_id": {
                                "type": "integer"
                            },
                            "topology_id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "notes": {
                                "type": "string"
                            },
                            "root_node_id": {
                                "type": "string"
                            },
                            "inserted_datetime": {
                                "type": "string"
                            },
                            "updated_datetime": {
                                "type": "string"
                            },
                            "updated_by": {
                                "type": "string"
                            }
                        }
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "node_id": {
                                    "type": "string"
                                },
                                "node_type_id": {
                                    "type": "integer"
                                },
                                "graph_id": {
                                    "type": "integer"
                                },
                                "source_id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "notes": {
                                    "type": "string"
                                },
                                "metadata": {
                                    "type": "string"
                                },
                                "inserted_datetime": {
                                    "type": "string"
                                },
                                "updated_datetime": {
                                    "type": "string"
                                },
                                "updated_by": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "link_id": {
                                    "type": "string"
                                },
                                "link_type_id": {
                                    "type": "integer"
                                },
                                "from_graph_id": {
                                    "type": "integer"
                                },
                                "from_node_id": {
                                    "type": "string"
                                },
                                "from_source_id": {
                                    "type": "string"
                                },
                                "to_graph_id": {
                                    "type": "integer"
                                },
                                "to_node_id": {
                                    "type": "string"
                                },
                                "to_source_id": {
                                    "type": "string"
                                },
                                "link_order": {
                                    "type": "integer"
                                },
                                "metadata": {
                                    "type": "string"
                                },
                                "valid_from_datetime": {
                                    "type": "string"
                                },
                                "valid_until_datetime": {
                                    "type": "string"
                                },
                                "is_disabled": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyGraphExportResponse"
                }
            },
            "TaxonomyNodeCreate": {
                "required": [
                    "graph_id"
                ],
                "type": "object",
                "properties": {
                    "graph_id": {
                        "type": "integer"
                    },
                    "no_links": {
                        "type": "integer"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxonomyNode"
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxonomyLink"
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeCreate"
                }
            },
            "TaxonomyNodeGet": {
                "type": "object",
                "properties": {
                    "node_id": {
                        "type": "string"
                    },
                    "node_type_id": {
                        "type": "integer"
                    },
                    "graph_id": {
                        "type": "integer"
                    },
                    "source_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "string"
                    },
                    "inserted_datetime": {
                        "type": "string"
                    },
                    "updated_datetime": {
                        "type": "string"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeGet"
                }
            },
            "TaxonomyNodeGetOrphans": {
                "type": "array",
                "items": {
                    "properties": {
                        "node_id": {
                            "type": "string"
                        },
                        "node_type_id": {
                            "type": "integer"
                        },
                        "graph_id": {
                            "type": "integer"
                        },
                        "source_id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "notes": {
                            "type": "string"
                        },
                        "metadata": {
                            "type": "string"
                        },
                        "inserted_datetime": {
                            "type": "string"
                        },
                        "updated_datetime": {
                            "type": "string"
                        },
                        "updated_by": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeGetOrphans"
                }
            },
            "TaxonomyNodeQuery": {
                "type": "object",
                "properties": {
                    "node_id": {
                        "type": "object"
                    },
                    "graph_id": {
                        "type": "object"
                    },
                    "name": {
                        "type": "object"
                    },
                    "source_id": {
                        "type": "object"
                    },
                    "notes": {
                        "type": "object"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "node_type_id": {
                        "type": "object"
                    },
                    "updated_by": {
                        "type": "object"
                    },
                    "inserted_datetime": {
                        "type": "object"
                    },
                    "updated_datetime": {
                        "type": "object"
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeQuery"
                }
            },
            "TaxonomyNodeQueryResponse": {
                "type": "array",
                "items": {
                    "properties": {
                        "node_id": {
                            "type": "string"
                        },
                        "node_type_id": {
                            "type": "integer"
                        },
                        "graph_id": {
                            "type": "integer"
                        },
                        "source_id": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "notes": {
                            "type": "string"
                        },
                        "metadata": {
                            "type": "string"
                        },
                        "inserted_datetime": {
                            "type": "string"
                        },
                        "updated_datetime": {
                            "type": "string"
                        },
                        "updated_by": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeQueryResponse"
                }
            },
            "TaxonomyNodeUpdate": {
                "required": [
                    "graph_id",
                    "node_type_id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "node_id": {
                        "type": "string"
                    },
                    "node_type_id": {
                        "type": "string"
                    },
                    "graph_id": {
                        "type": "integer"
                    },
                    "source_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeCreate"
                }
            },
            "TaxonomyLinkCreate": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "link_type_id": {
                                    "type": "integer"
                                },
                                "from_graph_id": {
                                    "type": "integer"
                                },
                                "from_node_id": {
                                    "type": "string"
                                },
                                "to_graph_id": {
                                    "type": "integer"
                                },
                                "to_node_id": {
                                    "type": "string"
                                },
                                "updated_by": {
                                    "type": "string"
                                }
                            }
                        },
                        "xml": {
                            "name": "TaxonomyLinkCreate"
                        }
                    }
                }
            },
            "TaxonomyLinkCreateResponse": {
                "type": "array",
                "items": {
                    "properties": {
                        "link_type_id": {
                            "type": "integer"
                        },
                        "from_graph_id": {
                            "type": "integer"
                        },
                        "from_node_id": {
                            "type": "string"
                        },
                        "to_graph_id": {
                            "type": "integer"
                        },
                        "to_node_id": {
                            "type": "string"
                        },
                        "link_id": {
                            "type": "string"
                        },
                        "inserted_datetime": {
                            "type": "string"
                        },
                        "updated_datetime": {
                            "type": "string"
                        },
                        "updated_by": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyLinkCreateResponse"
                }
            },
            "TaxonomyLinkUpdate": {
                "type": "object",
                "properties": {
                    "update_origin": {
                        "type": "integer"
                    },
                    "link": {
                        "type": "object",
                        "properties": {
                            "link_id": {
                                "type": "string"
                            },
                            "link_type_id": {
                                "type": "integer"
                            },
                            "order": {
                                "type": "integer"
                            },
                            "valid_from_datetime": {
                                "type": "string"
                            },
                            "valid_until_datetime": {
                                "type": "string"
                            },
                            "is_disabled": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyLinkUpdate"
                }
            },
            "TaxonomyLinkDelete": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "object",
                        "properties": {
                            "link_id": {
                                "type": "string"
                            }
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyLinkDelete"
                }
            },
            "TaxonomyLinkTypeGet": {
                "type": "array",
                "items": {
                    "properties": {
                        "link_type_id": {
                            "type": "integer"
                        },
                        "parent_link_type": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "notes": {
                            "type": "string"
                        },
                        "metadata_schema": {
                            "type": "string"
                        },
                        "inserted_datetime": {
                            "type": "string"
                        },
                        "updated_datetime": {
                            "type": "string"
                        },
                        "updated_by": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyLinkTypeGet"
                }
            },
            "TaxonomyNodeProductDeleteRequest": {
                "type": "object",
                "properties": {
                    "node_id": {
                        "type": "integer"
                    },
                    "node_product_ids": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "node_product_id": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeProductDeleteRequest"
                }
            },
            "TaxonomyNodeProductCreateRequest": {
                "type": "object",
                "properties": {
                    "node_products": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "node_product": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "graph_id": {
                        "type": "integer"
                    },
                    "by_source_id": {
                        "type": "integer"
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeProductCreateRequest"
                }
            },
            "TaxonomyNodeProductCreateResponse": {
                "type": "object",
                "properties": {
                    "node_products": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "node_product": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeProductCreateResponse"
                }
            },
            "TaxonomyNodeProductGetRequest": {
                "type": "object",
                "properties": {
                    "node_id": {
                        "type": "integer"
                    },
                    "product_code": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeProductGetRequest"
                }
            },
            "TaxonomyNodeProductGetResponse": {
                "type": "array",
                "items": {
                    "properties": {
                        "node_product_id": {
                            "type": "integer"
                        },
                        "node_id": {
                            "type": "integer"
                        },
                        "product_code": {
                            "type": "string"
                        },
                        "product_name": {
                            "type": "string"
                        },
                        "inserted_datetime": {
                            "type": "string"
                        },
                        "updated_datetime": {
                            "type": "string"
                        },
                        "updated_by": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeProductGetResponse"
                }
            },
            "TaxonomyNodeTenantProductCreateRequest": {
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "node_products": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "node_tanant_product": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "graph_id": {
                        "type": "integer"
                    },
                    "by_source_id": {
                        "type": "integer"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeTenantProductCreateRequest"
                }
            },
            "TaxonomyNodeTenantProductCreateResponse": {
                "type": "object",
                "properties": {
                    "node_products": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "node_product": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeTenantProductCreateResponse"
                }
            },
            "TaxonomyNodeTenantProductExportResponse": {
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "graph_id": {
                        "type": "integer"
                    },
                    "page_size": {
                        "type": "integer"
                    },
                    "page": {
                        "type": "integer"
                    },
                    "item_code_category_map": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "item_code": {
                                    "type": "string"
                                },
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeTenantProductExportResponse"
                }
            },
            "TaxonomyNodeTenantProductAutoclassifyRequest": {
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "graph_id": {
                        "type": "integer"
                    },
                    "updated_by": {
                        "type": "string"
                    },
                    "incremental": {
                        "type": "boolean"
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeTenantAutoclassifyRequest"
                }
            },
            "TaxonomyNodeTenantProductAutocatRequest": {
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "classification_graph_id": {
                        "type": "integer"
                    },
                    "category_graph_id": {
                        "type": "integer"
                    },
                    "classification_link_type_id": {
                        "type": "integer"
                    },
                    "cross_link_type_id": {
                        "type": "integer"
                    },
                    "category_link_type_id": {
                        "type": "integer"
                    },
                    "updated_by": {
                        "type": "string"
                    },
                    "incremental": {
                        "type": "boolean"
                    }
                },
                "xml": {
                    "name": "TaxonomyNodeTenantAutocRequest"
                }
            },
            "TaxonomyBannerGraphCreateRequest": {
                "type": "object",
                "properties": {
                    "banner_id": {
                        "type": "string"
                    },
                    "graph_id": {
                        "type": "integer"
                    },
                    "node_id": {
                        "type": "string"
                    },
                    "graph_purpose_id": {
                        "type": "integer"
                    },
                    "graph_status_id": {
                        "type": "integer"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyBannerGraphCreateRequest"
                }
            },
            "TaxonomyBannerGraphGetRequest": {
                "type": "object",
                "properties": {
                    "banner_graph_id": {
                        "type": "string"
                    },
                    "banner_id": {
                        "type": "string"
                    },
                    "graph_id": {
                        "type": "integer"
                    }
                },
                "xml": {
                    "name": "TaxonomyBannerGraphGetRequest"
                }
            },
            "TaxonomyBannerGraphUpdateRequest": {
                "type": "object",
                "properties": {
                    "banner_graph_id": {
                        "type": "integer"
                    },
                    "node_id": {
                        "type": "string"
                    },
                    "graph_status_id": {
                        "type": "integer"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyBannerGraphUpdateRequest"
                }
            },
            "TaxonomyBannerGraphPublishRequest": {
                "type": "object",
                "properties": {
                    "banner_graph_id": {
                        "type": "integer"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyBannerGraphPublishRequest"
                }
            },
            "TaxonomyBannerGraphPublishResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "nodes_published": {
                        "type": "integer"
                    },
                    "links_published": {
                        "type": "integer"
                    }
                },
                "xml": {
                    "name": "TaxonomyBannerGraphPublishResponse"
                }
            },
            "TaxonomyBannerGraphPublishLogListResponse": {
                "type": "object",
                "properties": {
                    "banner_graph_publish_id": {
                        "type": "integer"
                    },
                    "banner_graph_id": {
                        "type": "integer"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    },
                    "published_datetime": {
                        "type": "string"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyBannerGraphPublishLogListResponse"
                }
            },
            "TaxonomyBannerGraphDeleteRequest": {
                "type": "object",
                "properties": {
                    "banner_graph_id": {
                        "type": "integer"
                    },
                    "banner_id": {
                        "type": "string"
                    },
                    "graph_purpose_id": {
                        "type": "integer"
                    }
                },
                "xml": {
                    "name": "TaxonomyBannerGraphDeleteRequest"
                }
            },
            "TaxonomyBannerGraphGetResponse": {
                "type": "object",
                "properties": {
                    "banner_graph_id": {
                        "type": "string"
                    },
                    "banner_id": {
                        "type": "string"
                    },
                    "graph_id": {
                        "type": "integer"
                    },
                    "node_id": {
                        "type": "string"
                    },
                    "graph_purpose_id": {
                        "type": "integer"
                    },
                    "graph_status_id": {
                        "type": "integer"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyBannerGraphCreateResponse"
                }
            },
            "TaxonomyBannerGraphDeleteResponse": {
                "type": "object",
                "properties": {
                    "banner_id": {
                        "type": "string"
                    },
                    "graph_purpose_id": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyBannerGraphDeleteResponse"
                }
            },
            "TaxonomyReportNoClassTenantCategory": {
                "type": "object",
                "properties": {
                    "tenant_product_category": {
                        "type": "string"
                    },
                    "item_count": {
                        "type": "integer"
                    },
                    "product_codes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "TaxonomyReportNoClassTenantCategory"
                }
            },
            "TaxonomyReportTenantProductCategories": {
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "item_code": {
                        "type": "string"
                    },
                    "tenant_product_name": {
                        "type": "string"
                    },
                    "tenant_product_description": {
                        "type": "string"
                    },
                    "tenant_product_brand": {
                        "type": "string"
                    },
                    "tenant_product_category": {
                        "type": "string"
                    },
                    "node_tenant_product_source": {
                        "type": "string"
                    },
                    "node_tenant_product_status": {
                        "type": "string"
                    },
                    "category_node_id": {
                        "type": "string"
                    },
                    "category_node_source_id": {
                        "type": "string"
                    },
                    "classification_node_id": {
                        "type": "string"
                    },
                    "classification_node_source_id": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyReportTenantProductCategories"
                }
            },
            "TaxonomyReportCategoryProductFill": {
                "type": "object",
                "properties": {
                    "node_id": {
                        "type": "string"
                    },
                    "source_id": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer"
                    },
                    "itemcode": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "brand": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "TaxonomyReportCategoryProductFill"
                }
            },
            "SegmentDefinition": {
                "type": "object",
                "properties": {
                    "segment_id": {
                        "type": "string"
                    },
                    "segment_name": {
                        "type": "string"
                    },
                    "xandr_segment_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "segment_type": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        }
                    },
                    "tenants": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "calculation_query": {
                        "type": "string"
                    },
                    "last_calculated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_published": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "SegmentDefinition"
                }
            },
            "SegmentDefinitionListResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SegmentDefinition"
                        }
                    },
                    "total": {
                        "type": "integer"
                    },
                    "next_offset": {
                        "type": "integer"
                    }
                },
                "xml": {
                    "name": "SegmentDefinitionListResponse"
                }
            },
            "SegmentDefinitionSave": {
                "type": "object",
                "properties": {
                    "segment_id": {
                        "type": "string"
                    },
                    "segment_name": {
                        "type": "string"
                    },
                    "xandr_segment_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "segment_type_d": {
                        "type": "string"
                    },
                    "tenants": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "calculation_query": {
                        "type": "string"
                    },
                    "last_updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "SegmentDefinitionSave"
                }
            },
            "SegmentDestinationListResponse": {
                "type": "array",
                "items": {
                    "properties": {
                        "destination_id": {
                            "type": "string"
                        },
                        "destination_type": {
                            "type": "string"
                        },
                        "destination_name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "display_on_portal": {
                            "type": "boolean"
                        },
                        "last_updated": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                },
                "xml": {
                    "name": "SegmentDestinationListResponse"
                }
            },
            "SegmentDistributionListResponse": {
                "type": "array",
                "items": {
                    "properties": {
                        "distribution_id": {
                            "type": "string"
                        },
                        "distribution_name": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string"
                        },
                        "expires_at": {
                            "type": "string",
                            "format": "date"
                        },
                        "last_updated": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                },
                "xml": {
                    "name": "SegmentDistributionListResponse"
                }
            },
            "SegmentQueryTest": {
                "type": "object",
                "properties": {
                    "tenant_ids": {
                        "type": "string"
                    },
                    "query": {
                        "type": "string"
                    },
                    "segment_type_id": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "SegmentQueryTest"
                }
            },
            "SegmentTagListResponse": {
                "type": "array",
                "items": {
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        }
                    },
                    "xml": {
                        "name": "SegmentTagListResponse"
                    }
                }
            },
            "ConfigBannerSftp": {
                "type": "object",
                "properties": {
                    "banner_id": {
                        "type": "string"
                    },
                    "banner_short_name": {
                        "type": "string"
                    },
                    "account_type": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "parent_id": {
                                "type": "string"
                            }
                        }
                    },
                    "server": {
                        "type": "object",
                        "properties": {
                            "host": {
                                "type": "string"
                            },
                            "port": {
                                "type": "integer"
                            }
                        }
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "container": {
                                    "type": "string"
                                },
                                "root_folder": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "public_keys": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "distplay_name": {
                                    "type": "string"
                                },
                                "key_data": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "ConfigBannerSftp"
                }
            },
            "ConfigBannerSftpListResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ConfigBannerSftp"
                },
                "xml": {
                    "name": "ConfigBannerSftpListResponse"
                }
            },
            "ConfigBannerSftpSave": {
                "type": "object",
                "properties": {
                    "banner_id": {
                        "type": "string"
                    },
                    "account_type": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "parent_id": {
                                "type": "string"
                            }
                        }
                    },
                    "server": {
                        "type": "object",
                        "properties": {
                            "host": {
                                "type": "string"
                            },
                            "port": {
                                "type": "integer"
                            }
                        }
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "container": {
                                    "type": "string"
                                },
                                "root_folder": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "public_keys": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "distplay_name": {
                                    "type": "string"
                                },
                                "key_data": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "ConfigBannerSftpSave"
                }
            },
            "ConfigWorkflowRequestCreate": {
                "type": "object",
                "properties": {
                    "banner_id": {
                        "type": "string"
                    },
                    "workflow_id": {
                        "type": "string"
                    },
                    "payload": {
                        "type": "object"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "ConfigWorkflowRequestCreate"
                }
            },
            "ConfigWorkflowRequestCreateResponse": {
                "type": "object",
                "properties": {
                    "request_id": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "ConfigWorkflowRequestCreateResponse"
                }
            },
            "ConfigWorkflowRequestStatusResponse": {
                "type": "object",
                "properties": {
                    "request_id": {
                        "type": "string"
                    },
                    "workflow_id": {
                        "type": "string"
                    },
                    "workflow_name": {
                        "type": "string"
                    },
                    "banner_id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "retries": {
                        "type": "integer"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "request_timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "step_id": {
                                    "type": "string"
                                },
                                "step_name": {
                                    "type": "string"
                                },
                                "step_order": {
                                    "type": "integer"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "status_code": {
                                    "type": "integer"
                                },
                                "step_completed_timestamp": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "ConfigWorkflowRequestStatusResponse"
                }
            },
            "ConfigAzureSFTP": {
                "type": "object",
                "properties": {
                    "user_name": {
                        "type": "string"
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "container": {
                                    "type": "string"
                                },
                                "root_folder": {
                                    "type": "string"
                                },
                                "folders": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "format": "string"
                                }
                            }
                        }
                    },
                    "public_keys": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "display_name": {
                                    "type": "string"
                                },
                                "key_data": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "ConfigAzureSFTP"
                }
            },
            "AdImpressionCountRequest": {
                "type": "object",
                "properties": {
                    "ad_impression_id": {
                        "type": "string"
                    },
                    "tenant_id": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "AdImpressionCountRequest"
                }
            },
            "AdImpressionCountResponse": {
                "type": "object",
                "properties": {
                    "tenant_id": {
                        "type": "string"
                    },
                    "ad_impression_id": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer"
                    },
                    "last_inserted": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "xml": {
                    "name": "AdImpressionCountResponse"
                }
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "api-key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "api-key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}